Bootstrap:docker
From:nvidia/cuda:10.0-cudnn7-devel-centos7

%environment
export KERAS_BACKEND=tensorflow
export PATH=/usr/local/cuda/bin:$PATH
export LD_LIBRARY_PATH=/usr/local/cuda/lib64

%post
# General Python packages
PYTHON3_PACKAGES="tensorflow-gpu numpy<2.0.0 keras pillow scikit-learn pandas pandas_ml matplotlib mxnet mlxtend"
PYTHON2_PACKAGES="tensorflow-gpu numpy<2.0.0 keras pillow scikit-learn pandas mxnet matplotlib mlxtend"
yum install -y epel-release
yum clean all && yum makecache
yum update -y
yum install -y @"Development Tools"
yum install -y libgomp cmake3 vim cuda
yum install -y git gcc-c++ sudo curl openblas lapack python36 wget python-devel python36-devel openssl-devel curl-devel libxml2 libxml2-devel
# Install all the python bits
wget https://bootstrap.pypa.io/get-pip.py
python36 get-pip.py
python2 get-pip.py
python36 -m pip install $PYTHON3_PACKAGES
python2 -m pip install $PYTHON2_PACKAGES
# install R
## Turn off nodoc as that ruins R apparently
# sed -i 's/tsflags=nodocs//g' /etc/yum.conf
# or use --setopt=tsflags= to do it per invocation
yum install -y --setopt=tsflags= R-core
yum install -y R-core-devel R-devel R-Rcpp R-Rcpp-devel
# R packages
R --no-save <<EOL
install.packages("pkgbuild", repos="https://ftp.ussg.iu.edu/CRAN/")
install.packages("devtools", repos="https://ftp.ussg.iu.edu/CRAN/")
#options(devtools.install.args = c("--no-multiarch", "--no-test-load", "--no-html","--nodoc"))
#install.packages("tidyselect", repos="https://mirror.las.iastate.edu/CRAN/")
library(devtools)
devtools::install_github("rstudio/tensorflow")
library(tensorflow)
try(devtools::install_github("rstudio/keras"))
library(keras)
EOL
# Pytorch stuff
python36 -m pip install https://download.pytorch.org/whl/cu100/torch-1.0.1.post2-cp36-cp36m-linux_x86_64.whl
python36 -m pip install torchvision
python2 -m pip install https://download.pytorch.org/whl/cu100/torch-1.0.1.post2-cp27-cp27mu-linux_x86_64.whl
python2 -m pip install torchvision

%runscript
exec $@

# Author: B. Anderson
# Singularity recipe for creating a container for using the SECAPR pipeline
# https://github.com/AntonelliLab/seqcap_processor


Bootstrap: docker
From: ubuntu:20.04


%labels
	MAINTAINER bmichanderson
	PROGRAM secapr
	VERSION 2.2.8


%help
	This container is for running the SECAPR pipeline from Tobias Andermann
	To run the program, use either:
	singularity exec [container] secapr args
	or
	singularity run [container] args


%post
	export DEBIAN_FRONTEND=noninteractive

	# install dependencies
	# for ABYSS, add libboost-dev, libsparsehash-dev
	apt update && apt install -y \
	autoconf \
	automake \
	build-essential \
	bwa \
	ca-certificates \
	cmake \
	emboss \
	expat \
	fastqc \
	fontconfig \
	fonts-dejavu-core \
	git \
	libblas-dev \
	libbz2-dev \
	libcurl4 \
	libdeflate-dev \
	libedit-dev \
	libffi-dev \
	libfreetype-dev \
	libgd-dev \
	libgfortran5 \
	libgif-dev \
	libhts-dev \
	libicu-dev \
	libjbig-dev \
	libjpeg-dev \
	libkrb5-dev \
	liblapack-dev \
	liblcms2-dev \
	liblz4-dev \
	libopenblas-dev \
	libopenjp2-7-dev \
	libopenmpi-dev \
	libpng-dev \
	libssh2-1-dev \
	libtiff-dev \
	libwebp-dev \
	libxml2-dev \
	llvm-11-dev \
	mafft \
	make \
	muscle \
	ncbi-blast+ \
	ncurses-base \
	openjdk-11-jdk \
	openmpi-bin \
	openmpi-common \
	openssl \
	perl \
	python3 \
	python3-certifi \
	python3-cycler \
	python3-dateutil \
	python3-kiwisolver \
	python3-matplotlib \
	python3-numpy \
	python3-olefile \
	python3-openssl \
	python3-pandas \
	python3-pip \
	python3-pyparsing \
	python3-setuptools \
	python3-six \
	python3-tornado \
	python3-wheel \
	readline-common \
	sqlite3 \
	tk \
	trimmomatic \
	tzdata \
	wget \
	xz-utils \
	zlib1g-dev \
	zstd

		# set link for emboss functions
		ln -s /usr/bin/em_cons /usr/bin/cons
		ln -s /usr/bin/em_pscan /usr/bin/pscan

		# upgrade pip
		python3 -m pip install --upgrade pip

		# ABYSS
		# NOTE: this used to be a dependency, but no longer used (?)
#		VER=2.3.1
#		URL=https://github.com/bcgsc/abyss/releases/download/"$VER"/abyss-"$VER".tar.gz
#		wget "$URL"
#		tar -xzf abyss-"$VER".tar.gz && rm abyss-"$VER".tar.gz
#		cd abyss-"$VER"
#		./autogen.sh
#		mkdir build
#		cd build
#		../configure --prefix=/usr/bin/abyss
#		make
#		make install
#		cd ../.. && rm -r abyss-"$VER"

		# Biopython
		VER=1.79
		pip install biopython=="$VER"

		# fastp
		VER=0.23
		URL=http://opengene.org/fastp/fastp."$VER".1
		wget "$URL"
		mv fastp."$VER".1 fastp
		chmod a+x ./fastp
		mv fastp /usr/bin/

		# lerc
		VER=2.2.1
		URL=https://github.com/Esri/lerc/archive/refs/tags/v"$VER".tar.gz
		wget "$URL"
		tar -xzf v"$VER".tar.gz && rm v"$VER".tar.gz
		cd lerc-"$VER"/OtherLanguages/Python
		python3 ./setup.py install
		cd ../../.. && rm -r lerc-"$VER"

		# libiconv
		VER=1.16
		URL=https://ftp.gnu.org/pub/gnu/libiconv/libiconv-"$VER".tar.gz
		wget "$URL"
		tar -xzf libiconv-"$VER".tar.gz && rm libiconv-"$VER".tar.gz
		cd libiconv-"$VER"
		./configure --prefix=/usr/local
		make
		make install
		cd .. && rm -r libiconv-"$VER"

		# pillow
		VER=8.3.1
		python3 -m pip install Pillow=="$VER"

		# pytz
		pip install pytz

		# samtools
		VER=1.11
		URL=https://github.com/samtools/samtools/releases/download/"$VER"/samtools-"$VER".tar.bz2
		wget "$URL"
		tar -xjf samtools-"$VER".tar.bz2 && rm samtools-"$VER".tar.bz2
		cd samtools-"$VER"
		./configure
		make
		make install
		cd .. && rm -r samtools-"$VER"

		# SPAdes
		VER=3.15.2
		URL=http://cab.spbu.ru/files/release"$VER"/SPAdes-"$VER".tar.gz
		wget "$URL"
		tar -xzf SPAdes-"$VER".tar.gz && rm SPAdes-"$VER".tar.gz
		cd SPAdes-"$VER"
		PREFIX=/usr ./spades_compile.sh
		cd .. && rm -r SPAdes-"$VER"

		# trimal
		VER=1.4.1
		URL=https://github.com/inab/trimal/archive/refs/tags/v"$VER".tar.gz
		wget "$URL"
		tar -xzf v"$VER".tar.gz && rm v"$VER".tar.gz
		cd trimal-"$VER"/source
		make
		mv *al /usr/bin/
		cd ../.. && rm -r trimal-"$VER"


	# clean up
	apt autoremove -y && apt clean all


	# python alias
	ln -s /usr/bin/python3 /usr/bin/python


	# install SECAPR
	# since conda install doesn't seem to work, let's try directly from github
	# note: this doesn't seem to set the version properly when pip installs
	VER=2.2.8
	# now I've set my development version to a specific branch
	#URL=https://github.com/AntonelliLab/seqcap_processor/archive/refs/tags/v"$VER".tar.gz
	# note: I've made a small patch of paralogs_to_ref.py, so I'll use my fork for now
	#URL=https://github.com/bmichanderson/seqcap_processor/archive/refs/tags/v2.2.8_patch2.tar.gz
	#pip install "$URL"
	# now I've made some other changes to scripts, so I'll just point to my repo
	# updated to now point to my develop branch with the most up to date changes
	URL=https://github.com/bmichanderson/seqcap_processor.git@develop_b
	pip install git+"$URL"


%environment
	# Set up environmental variables within the container


%runscript
	# This will be executed when the container is run (singularity run [container])
	secapr "$@"

BootStrap: docker
From: ubuntu:20.04
%post
    . /.singularity.d/env/10-docker*.sh

%environment
    export LANGUAGE=en_AU.UTF-8
    export LC_ALL=en_AU.UTF-8
%post
    export LANGUAGE=en_AU.UTF-8
    export LC_ALL=en_AU.UTF-8

%labels
    email luhan.cheng@monash.edu
    maintainer Luhan Cheng

%post
    cd /
    rm -f /bin/sh && ln -s /bin/bash /bin/sh
    rm -f /usr/bin/sh && ln -s /usr/bin/bash /usr/bin/sh
    /bin/bash

%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        bc \
        bison \
        build-essential \
        cmake \
        flex \
        git \
        libevent-dev \
        libgl1-mesa-dev \
        libglu1-mesa-dev \
        libjpeg-dev \
        libncurses-dev \
        libopenblas-dev \
        libx11-dev \
        libxi-dev \
        libxi6 \
        libxmu-dev \
        libxmu-headers \
        libxmu6 \
        locales \
        pkg-config \
        software-properties-common \
        wget \
        x11proto-core-dev \
        zlib1g-dev
    rm -rf /var/lib/apt/lists/*

%post
    cd /
    locale-gen en_AU.UTF-8

# Installing vglrun and TurboVNC

%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        mesa-utils \
        pyqt5-dev \
        python3-pip \
        python3-pyqt5 \
        python3-tk \
        ubuntu-desktop \
        vim
    rm -rf /var/lib/apt/lists/*

%post
    cd /
    wget https://swift.rc.nectar.org.au/v1/AUTH_810/CVL-Singularity-External-Files/turbovnc_2.2.5_amd64.deb && dpkg -i turbovnc_2.2.5_amd64.deb && rm turbovnc_2.2.5_amd64.deb
    wget https://swift.rc.nectar.org.au/v1/AUTH_810/CVL-Singularity-External-Files/virtualgl_2.6.4_amd64.deb && dpkg -i virtualgl_2.6.4_amd64.deb && rm virtualgl_2.6.4_amd64.deb
    apt update
    apt -y upgrade

# https://github.com/BIC-MNI/minc-toolkit-v2.git
%post
    cd /
    mkdir -p /var/tmp && cd /var/tmp && git clone --depth=1 --branch release-1.9.18.1 --recursive https://github.com/BIC-MNI/minc-toolkit-v2.git minc-toolkit-v2 && cd -
    cd /var/tmp/minc-toolkit-v2
    sed -i -e 's/http\:\/\/mirrors\.ibiblio\.org\/gnu\/ftp\/gnu\/gsl/http\:\/\/ftp\.\sun\.ac\.za\/ftp\/pub\/mirrors\/ftp\.gnu\.org\/gsl/g' cmake-modules/BuildGSL.cmake
    mkdir -p /var/tmp/minc-toolkit-v2/build && cd /var/tmp/minc-toolkit-v2/build && cmake -DCMAKE_INSTALL_PREFIX=/opt/minc/1.9.18 -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX:PATH=/opt/minc/1.9.18 -DMT_BUILD_ABC:BOOL=ON -DMT_BUILD_ANTS:BOOL=ON -DMT_BUILD_C3D:BOOL=ON -DMT_BUILD_ELASTIX:BOOL=ON -DMT_BUILD_IM:BOOL=OFF -DMT_BUILD_ITK_TOOLS:BOOL=ON -DMT_BUILD_LITE:BOOL=OFF -DMT_BUILD_SHARED_LIBS:BOOL=ON -DMT_BUILD_VISUAL_TOOLS:BOOL=ON -DMT_USE_OPENMP:BOOL=ON -DUSE_SYSTEM_FFTW3D:BOOL=OFF -DUSE_SYSTEM_FFTW3F:BOOL=OFF -DUSE_SYSTEM_GLUT:BOOL=OFF -DUSE_SYSTEM_GSL:BOOL=OFF -DUSE_SYSTEM_HDF5:BOOL=OFF -DUSE_SYSTEM_ITK:BOOL=OFF -DUSE_SYSTEM_NETCDF:BOOL=OFF -DUSE_SYSTEM_NIFTI:BOOL=OFF -DUSE_SYSTEM_PCRE:BOOL=OFF -DUSE_SYSTEM_ZLIB:BOOL=OFF /var/tmp/minc-toolkit-v2
    cmake --build /var/tmp/minc-toolkit-v2/build --target all -- -j$(nproc)
    cmake --build /var/tmp/minc-toolkit-v2/build --target install -- -j$(nproc)
    rm -rf /var/tmp/minc-toolkit-v2

%environment
    export CXX_INCLUDE_PATH=/opt/minc/1.9.18.1/lib:$CXX_INCLUDE_PATH
    export C_INCLUDE_PATH=/opt/minc/1.9.18.1/lib:$C_INCLUDE_PATH
    export LD_LIBRARY_PATH=/opt/minc/1.9.18.1/lib64:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/opt/minc/1.9.18.1/lib64:$LIBRARY_PATH
    export PATH=/opt/minc/1.9.18.1/bin:$PATH
%post
    export CXX_INCLUDE_PATH=/opt/minc/1.9.18.1/lib:$CXX_INCLUDE_PATH
    export C_INCLUDE_PATH=/opt/minc/1.9.18.1/lib:$C_INCLUDE_PATH
    export LD_LIBRARY_PATH=/opt/minc/1.9.18.1/lib64:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/opt/minc/1.9.18.1/lib64:$LIBRARY_PATH
    export PATH=/opt/minc/1.9.18.1/bin:$PATH

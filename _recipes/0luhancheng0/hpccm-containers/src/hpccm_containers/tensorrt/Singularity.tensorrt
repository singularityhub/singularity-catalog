BootStrap: docker
From: nvcr.io/nvidia/cuda:11.0-devel-ubuntu20.04
%post
    . /.singularity.d/env/10-docker*.sh

%labels
    email luhan.cheng@monash.edu
    maintainer Luhan Cheng

%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        git \
        libxml2-dev \
        libxslt-dev \
        python3-pip
    rm -rf /var/lib/apt/lists/*

# Anaconda
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        ca-certificates \
        wget
    rm -rf /var/lib/apt/lists/*
%post
    cd /
    mkdir -p /var/tmp && wget -q -nc --no-check-certificate -P /var/tmp http://repo.anaconda.com/miniconda/Miniconda3-py38_4.8.3-Linux-x86_64.sh
    bash /var/tmp/Miniconda3-py38_4.8.3-Linux-x86_64.sh -b -p /usr/local/anaconda
    /usr/local/anaconda/bin/conda init
    ln -s /usr/local/anaconda/etc/profile.d/conda.sh /etc/profile.d/conda.sh
    . /usr/local/anaconda/etc/profile.d/conda.sh
    conda activate base
    conda config --add channels anaconda --add channels conda-forge --add channels pytorch
    conda install -y python=3.7 pytorch=1.7.1 tensorflow-gpu=2.2.0 torchaudio torchvision
    /usr/local/anaconda/bin/conda clean -afy
    rm -rf /var/tmp/Miniconda3-py38_4.8.3-Linux-x86_64.sh

# https://github.com/inducer/pycuda.git
%post
    cd /
    mkdir -p /var/tmp && cd /var/tmp && git clone --depth=1 --branch v2020.1 https://github.com/inducer/pycuda.git pycuda && cd -
    cd /var/tmp/pycuda
    ./configure.py --cuda-root=/usr/local/cuda-11.0
    rm -rf /var/tmp/pycuda

%environment
    export CXX_INCLUDE_PATH=/usr/local/pycuda/lib:$CXX_INCLUDE_PATH
    export C_INCLUDE_PATH=/usr/local/pycuda/lib:$C_INCLUDE_PATH
    export LD_LIBRARY_PATH=/usr/local/pycuda/lib64:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/usr/local/pycuda/lib64:$LIBRARY_PATH
    export PATH=/usr/local/pycuda/bin:$PATH
%post
    export CXX_INCLUDE_PATH=/usr/local/pycuda/lib:$CXX_INCLUDE_PATH
    export C_INCLUDE_PATH=/usr/local/pycuda/lib:$C_INCLUDE_PATH
    export LD_LIBRARY_PATH=/usr/local/pycuda/lib64:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/usr/local/pycuda/lib64:$LIBRARY_PATH
    export PATH=/usr/local/pycuda/bin:$PATH

%files
    TensorRT-7.2.1.6.Ubuntu-18.04.x86_64-gnu.cuda-11.0.cudnn8.0.tar.gz /TensorRT-7.2.1.6.Ubuntu-18.04.x86_64-gnu.cuda-11.0.cudnn8.0.tar.gz

%post
    cd /
    mkdir -p /usr/local/tensorrt
    tar -xf /TensorRT-7.2.1.6.Ubuntu-18.04.x86_64-gnu.cuda-11.0.cudnn8.0.tar.gz --strip-components 1 -C /usr/local/tensorrt
    rm -rf /TensorRT-7.2.1.6.Ubuntu-18.04.x86_64-gnu.cuda-11.0.cudnn8.0.tar.gz

%environment
    export CXX_INCLUDE_PATH=/usr/local/anaconda/lib:$CXX_INCLUDE_PATH
    export C_INCLUDE_PATH=/usr/local/anaconda/lib:$C_INCLUDE_PATH
    export LD_LIBRARY_PATH=/usr/local/anaconda/lib64:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/usr/local/anaconda/lib64:$LIBRARY_PATH
    export PATH=/usr/local/anaconda/bin:$PATH
%post
    export CXX_INCLUDE_PATH=/usr/local/anaconda/lib:$CXX_INCLUDE_PATH
    export C_INCLUDE_PATH=/usr/local/anaconda/lib:$C_INCLUDE_PATH
    export LD_LIBRARY_PATH=/usr/local/anaconda/lib64:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/usr/local/anaconda/lib64:$LIBRARY_PATH
    export PATH=/usr/local/anaconda/bin:$PATH

# pip
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        python3-pip \
        python3-setuptools \
        python3-wheel
    rm -rf /var/lib/apt/lists/*
%post
    cd /
    pip3 --no-cache-dir install /usr/local/tensorrt/python/tensorrt-7.2.1.6-cp37-none-linux_x86_64.whl /usr/local/tensorrt/uff/uff-0.6.9-py2.py3-none-any.whl /usr/local/tensorrt/graphsurgeon/graphsurgeon-0.4.5-py2.py3-none-any.whl /usr/local/tensorrt/onnx_graphsurgeon/onnx_graphsurgeon-0.2.6-py2.py3-none-any.whl

%files
    cudnn-11.0-linux-x64-v8.0.5.39.tgz /cudnn-11.0-linux-x64-v8.0.5.39.tgz

%post
    cd /
    mkdir -p /cudnn
    tar -xf /cudnn-11.0-linux-x64-v8.0.5.39.tgz -C /cudnn --strip-components 1
    cp /cudnn/include/cudnn*.h /usr/local/cuda/include
    cp /cudnn/lib64/libcudnn* /usr/local/cuda/lib64
    chmod a+r /usr/local/cuda/include/cudnn*.h /usr/local/cuda/lib64/libcudnn*
    rm -rf /cudnn /cudnn-11.0-linux-x64-v8.0.5.39.tgz

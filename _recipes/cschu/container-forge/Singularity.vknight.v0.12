Bootstrap: docker
From: ubuntu:20.04
IncludeCmd: yes

%labels
  MAINTAINER cschu (cschu1981@gmail.com)
  VERSION v.0.12

%environment
#R_VERSION=4.1
#export R_VERSION
#R_CONFIG_DIR=/etc/R/
#export R_CONFIG_DIR
export LC_ALL=C
export PATH=$PATH:/opt/software/miniconda3/bin:/opt/software/mOTUs:/opt/software/read_counter

%post
  apt-get update

  apt-get install -y 
  apt-get install -y apt-transport-https apt-utils software-properties-common

  apt-get install -y add-apt-key
  export DEBIAN_FRONTEND=noninteractive
  ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
  apt-get install -y tzdata
  dpkg-reconfigure --frontend noninteractive tzdata

  apt-get install -y wget python3-pip git dirmngr gnupg ca-certificates build-essential libssl-dev libcurl4-gnutls-dev libxml2-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev

  apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
  add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/'

  apt-get install -y r-base r-base-dev
  
  R --version
  python3 --version
    
  # installing packages from cran
  R --slave -e 'install.packages(c("devtools", "tidyverse", "optparse", "stringr", "progress"), repos="https://cran.rstudio.com/", dependencies=TRUE)'

  # installing profilers
  mkdir -p /opt/software

  # all the conda packages won't work together.. ><;
  wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh 
  bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/software/miniconda3
  rm -f Miniconda3-latest-Linux-x86_64.sh

  # install what you can via conda
  # /opt/software/miniconda3/bin/conda install -y -c conda-forge -c bioconda hmmer 'samtools>=1.13' bwa kraken2 'gatk4==4.1.6.0-0' fastqc multiqc bbmap seqtk
  /opt/software/miniconda3/bin/conda install -y -c conda-forge -c bioconda \
	  'hmmer=3.3.2=h1b792b2_1' \
    'samtools=1.13=h8c37831_0' \
    'bwa=0.7.17=h5bf99c6_8' \
    'kraken2=2.1.2=pl5262h7d875b9_0' \
    'gatk4=4.1.6.0=py38_0' \
    'fastqc=0.11.9=hdfd78af_1' \
    'multiqc=1.11=pyhdfd78af_0' \
    'bbmap=38.91=he522d1c_1' \
    'seqtk=1.3=h5bf99c6_3'

  # read_counter installation
  cd /opt/software
  git clone https://github.com/AlessioMilanese/read_counter.git

  # mOTUs installation
  # bwa and samtools via conda 

  cd /opt/software
  # mOTUs3
  git clone https://github.com/motu-tool/mOTUs.git
  cd mOTUs
  mkdir -p db_mOTU/
  touch db_mOTU/db_mOTU_versions
  git checkout c01d8b8fd37e6668540efd083bb627d328533e65
  pip install .
  # python3 setup.py

  # mTAGs installation
  # hmmer via conda

  # mOTUs3
  # pip3 install motu-profiler

  # vsearch
  cd /opt/software
  # wget https://github.com/torognes/vsearch/archive/v2.18.0.tar.gz  # source
  # wget https://github.com/torognes/vsearch/releases/download/v2.15.0/vsearch-2.15.0-linux-x86_64.tar.gz  # mtags tested with 2.15.0
  # wget https://github.com/torognes/vsearch/releases/download/v2.18.0/vsearch-2.18.0-linux-x86_64.tar.gz
  wget https://github.com/torognes/vsearch/releases/download/v2.18.0/vsearch-2.18.0-linux-x86_64-static.tar.gz
  tar xvzf vsearch-2.18.0-linux-x86_64-static.tar.gz
  mv vsearch-2.18.0-linux-x86_64-static vsearch

  ln -s /opt/software/vsearch/bin/vsearch /usr/bin/
  

  git clone https://github.com/cschu/mTAGs.git
  cd mTAGs
  git checkout 15fe1779726722854f87a952da7c78a661235fcd
  # git checkout feature/reactivate_readname_mapping_20220720
  python3 setup.py bdist_wheel
  pip3 install dist/*

  mtags download # <- this is stupid


  # MAPseq installation
  cd /opt/software
  wget -q https://github.com/jfmrod/MAPseq/releases/download/v1.2.6/mapseq-1.2.6-linux.tar.gz
  tar xzf mapseq-1.2.6-linux.tar.gz
  rm mapseq-1.2.6-linux.tar.gz
  mv mapseq-1.2.6-linux mapseq
  #  wget -q https://github.com/jfmrod/MAPseq/releases/download/2.0.1alpha/mapseq-2.0.1alpha-linux.tar.gz
  # tar xzf mapseq-2.0.1alpha-linux.tar.gz
  # rm mapseq-2.0.1alpha-linux.tar.gz
  # mv mapseq-2.0.1alpha-linux mapseq

  ln -s /opt/software/mapseq/mapseq /usr/bin/
  ln -s /opt/software/mapseq/share /usr/bin/

  #  apt-get install -y build-essential wget subversion git libncurses5-dev libtool autotools-dev autoconf dh-autoreconf
  #  git clone https://github.com/jfmrod/MAPseq.git
  #  cd MAPseq
  #  ./setup.sh
  #  ./bootstrap  # <- this one causes issues, use autoreconf?
  #  ./configure
  #  make 
  #  make install

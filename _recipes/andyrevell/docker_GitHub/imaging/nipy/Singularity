# Generated by Neurodocker version 0.5.0
# Timestamp: 2020-05-10 01:36:39 UTC
# 
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
# 
#     https://github.com/kaczmarj/neurodocker

Bootstrap: docker
From: ubuntu:18.04

%post
export ND_ENTRYPOINT="/neurodocker/startup.sh"
apt-get update -qq
apt-get install -y -q --no-install-recommends \
    apt-utils \
    bzip2 \
    ca-certificates \
    curl \
    locales \
    unzip \
    python3-pip \
	python-pip \
apt-get clean
rm -rf /var/lib/apt/lists/*
sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
dpkg-reconfigure --frontend=noninteractive locales
update-locale LANG="en_US.UTF-8"
chmod 777 /opt && chmod a+s /opt
mkdir -p /neurodocker
if [ ! -f "$ND_ENTRYPOINT" ]; then
  echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT"
  echo 'set -e' >> "$ND_ENTRYPOINT"
  echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT"
  echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT";
fi
chmod -R 777 /neurodocker && chmod a+s /neurodocker

pip3 install nibabel
pip3 install dipy
pip3 install fury
pip3 install nipy
pip3 install nilearn
pip3 install numpy==1.18.4
pip3 install pandas==1.0.3
pip3 install scipy==1.4.1
pip3 install seaborn

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    ed \
    gsl-bin \
    libglib2.0-0 \
    libglu1-mesa-dev \
    libglw1-mesa \
    libgomp1 \
    libjpeg62 \
    libnlopt-dev \
    libxm4 \
    netpbm \
    python3 \
    r-base \
    r-base-dev \
    tcsh \
    xfonts-base \
    xvfb
apt-get clean
rm -rf /var/lib/apt/lists/*
curl -sSL --retry 5 -o /tmp/toinstall.deb http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb
dpkg -i /tmp/toinstall.deb
rm /tmp/toinstall.deb
curl -sSL --retry 5 -o /tmp/toinstall.deb http://snapshot.debian.org/archive/debian-security/20160113T213056Z/pool/updates/main/libp/libpng/libpng12-0_1.2.49-1%2Bdeb7u2_amd64.deb
dpkg -i /tmp/toinstall.deb
rm /tmp/toinstall.deb
apt-get install -f
apt-get clean
rm -rf /var/lib/apt/lists/*
gsl2_path="$(find / -name 'libgsl.so.19' || printf '')"
if [ -n "$gsl2_path" ]; then
  ln -sfv "$gsl2_path" "$(dirname $gsl2_path)/libgsl.so.0";
fi
ldconfig
echo "Downloading AFNI ..."
mkdir -p /opt/afni-latest
curl -fsSL --retry 5 https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz \
| tar -xz -C /opt/afni-latest --strip-components 1

echo "Downloading ANTs ..."
mkdir -p /opt/ants-2.3.1
curl -fsSL --retry 5 https://dl.dropbox.com/s/1xfhydsf4t4qoxg/ants-Linux-centos6_x86_64-v2.3.1.tar.gz \
| tar -xz -C /opt/ants-2.3.1 --strip-components 1

echo "Downloading Convert3D ..."
mkdir -p /opt/convert3d-1.0.0
curl -fsSL --retry 5 https://sourceforge.net/projects/c3d/files/c3d/1.0.0/c3d-1.0.0-Linux-x86_64.tar.gz/download \
| tar -xz -C /opt/convert3d-1.0.0 --strip-components 1

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    cmake \
    g++ \
    gcc \
    git \
    make \
    pigz \
    zlib1g-dev
apt-get clean
rm -rf /var/lib/apt/lists/*
git clone https://github.com/rordenlab/dcm2niix /tmp/dcm2niix
mkdir /tmp/dcm2niix/build
cd /tmp/dcm2niix/build
cmake  -DCMAKE_INSTALL_PREFIX:PATH=/opt/dcm2niix-master ..
make 
make install
rm -rf /tmp/dcm2niix

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    bc \
    libgomp1 \
    libxmu6 \
    libxt6 \
    perl \
    tcsh
apt-get clean
rm -rf /var/lib/apt/lists/*
echo "Downloading FreeSurfer ..."
mkdir -p /opt/freesurfer-6.0.0-min
curl -fsSL --retry 5 https://dl.dropbox.com/s/nnzcfttc41qvt31/recon-all-freesurfer6-3.min.tgz \
| tar -xz -C /opt/freesurfer-6.0.0-min --strip-components 1 
sed -i '$isource "/opt/freesurfer-6.0.0-min/SetUpFreeSurfer.sh"' "$ND_ENTRYPOINT"

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    bc \
    dc \
    file \
    libfontconfig1 \
    libfreetype6 \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    libgomp1 \
    libice6 \
    libxcursor1 \
    libxft2 \
    libxinerama1 \
    libxrandr2 \
    libxrender1 \
    libxt6 \
    wget
apt-get clean
rm -rf /var/lib/apt/lists/*
echo "Downloading FSL ..."
mkdir -p /opt/fsl-6.0.1
curl -fsSL --retry 5 https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-6.0.1-centos6_64.tar.gz \
| tar -xz -C /opt/fsl-6.0.1 --strip-components 1 
sed -i '$iecho Some packages in this Docker container are non-free' $ND_ENTRYPOINT
sed -i '$iecho If you are considering commercial use of this container, please consult the relevant license:' $ND_ENTRYPOINT
sed -i '$iecho https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence' $ND_ENTRYPOINT
sed -i '$isource $FSLDIR/etc/fslconf/fsl.sh' $ND_ENTRYPOINT


export TMPDIR="$(mktemp -d)"
apt-get update -qq
apt-get install -y -q --no-install-recommends \
    bc \
    libncurses5 \
    libxext6 \
    libxmu6 \
    libxpm-dev \
    libxt6
apt-get clean
rm -rf /var/lib/apt/lists/*
echo "Downloading MATLAB Compiler Runtime ..."
curl -fsSL --retry 5 -o "$TMPDIR/mcr.zip" https://ssd.mathworks.com/supportfiles/downloads/R2018a/deployment_files/R2018a/installers/glnxa64/MCR_R2018a_glnxa64_installer.zip
unzip -q "$TMPDIR/mcr.zip" -d "$TMPDIR/mcrtmp"
"$TMPDIR/mcrtmp/install" -destinationFolder /opt/matlabmcr-2018a -mode silent -agreeToLicense yes
rm -rf "$TMPDIR"
unset TMPDIR

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    libgl1-mesa-dev \
    libgomp1 \
    libice6 \
    libjpeg62 \
    libsm6 \
    libx11-6 \
    libxext6 \
    libxi6 \
    libxmu6
apt-get clean
rm -rf /var/lib/apt/lists/*
echo "Downloading MINC, BEASTLIB, and MODELS..."
mkdir -p /opt/minc-1.9.15
curl -fsSL --retry 5 https://dl.dropbox.com/s/40hjzizaqi91373/minc-toolkit-1.9.15-20170529-CentOS_6.9-x86_64.tar.gz \
| tar -xz -C /opt/minc-1.9.15 --strip-components 1
curl -fsSL --retry 5 http://packages.bic.mni.mcgill.ca/tgz/beast-library-1.1.tar.gz \
| tar -xz -C /opt/minc-1.9.15/share
curl -fsSL --retry 5 -o /tmp/mni_90a.zip http://www.bic.mni.mcgill.ca/~vfonov/icbm/2009/mni_icbm152_nlin_sym_09a_minc2.zip
unzip /tmp/mni_90a.zip -d /opt/minc-1.9.15/share/icbm152_model_09a
curl -fsSL --retry 5 -o /tmp/mni_90c.zip http://www.bic.mni.mcgill.ca/~vfonov/icbm/2009/mni_icbm152_nlin_sym_09c_minc2.zip
unzip /tmp/mni_90c.zip -d /opt/minc-1.9.15/share/icbm152_model_09c
sed -i 's+MINC_TOOLKIT=/opt/minc+MINC_TOOLKIT=/opt/minc-1.9.15+g' /opt/minc-1.9.15/minc-toolkit-config.sh
sed -i '$isource /opt/minc-1.9.15/minc-toolkit-config.sh' $ND_ENTRYPOINT
rm -rf /tmp/mni*

echo "Downloading MRtrix3 ..."
mkdir -p /opt/mrtrix3-3.0_RC3
curl -fsSL --retry 5 https://dl.dropbox.com/s/2oh339ehcxcf8xf/mrtrix3-3.0_RC3-Linux-centos6.9-x86_64.tar.gz \
| tar -xz -C /opt/mrtrix3-3.0_RC3 --strip-components 1

echo "Downloading PETPVC ..."
mkdir -p /opt/petpvc-1.2.2
curl -fsSL --retry 5 https://github.com/UCL/PETPVC/releases/download/v1.2.2/PETPVC-1.2.2-Linux.tar.gz \
| tar -xz -C /opt/petpvc-1.2.2 --strip-components 1

export TMPDIR="$(mktemp -d)"
apt-get update -qq
apt-get install -y -q --no-install-recommends \
    bc \
    libncurses5 \
    libxext6 \
    libxmu6 \
    libxpm-dev \
    libxt6
apt-get clean
rm -rf /var/lib/apt/lists/*
echo "Downloading MATLAB Compiler Runtime ..."
curl -sSL --retry 5 -o /tmp/toinstall.deb http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb
dpkg -i /tmp/toinstall.deb
rm /tmp/toinstall.deb
apt-get install -f
apt-get clean
rm -rf /var/lib/apt/lists/*
curl -fsSL --retry 5 -o "$TMPDIR/MCRInstaller.bin" https://dl.dropbox.com/s/zz6me0c3v4yq5fd/MCR_R2010a_glnxa64_installer.bin
chmod +x "$TMPDIR/MCRInstaller.bin"
"$TMPDIR/MCRInstaller.bin" -silent -P installLocation="/opt/matlabmcr-2010a"
rm -rf "$TMPDIR"
unset TMPDIR
echo "Downloading standalone SPM ..."
curl -fsSL --retry 5 -o /tmp/spm12.zip http://www.fil.ion.ucl.ac.uk/spm/download/restricted/utopia/previous/spm12_r7219_R2010a.zip
unzip -q /tmp/spm12.zip -d /tmp
mkdir -p /opt/spm12-r7219
mv /tmp/spm12/* /opt/spm12-r7219/
chmod -R 777 /opt/spm12-r7219
rm -rf /tmp/*
/opt/spm12-r7219/run_spm12.sh /opt/matlabmcr-2010a/v713 quit
sed -i '$iexport SPMMCRCMD=\"/opt/spm12-r7219/run_spm12.sh /opt/matlabmcr-2010a/v713 script\"' $ND_ENTRYPOINT

echo '{
\n  "pkg_manager": "apt",
\n  "instructions": [
\n    [
\n      "base",
\n      "debian:stretch"
\n    ],
\n    [
\n      "_header",
\n      {
\n        "version": "generic",
\n        "method": "custom"
\n      }
\n    ],
\n    [
\n      "afni",
\n      {
\n        "version": "latest",
\n        "install_r": "true",
\n        "install_python3": "true"
\n      }
\n    ],
\n    [
\n      "ants",
\n      {
\n        "version": "2.3.1"
\n      }
\n    ],
\n    [
\n      "convert3d",
\n      {
\n        "version": "1.0.0"
\n      }
\n    ],
\n    [
\n      "dcm2niix",
\n      {
\n        "version": "master",
\n        "method": "source"
\n      }
\n    ],
\n    [
\n      "freesurfer",
\n      {
\n        "version": "6.0.0-min"
\n      }
\n    ],
\n    [
\n      "fsl",
\n      {
\n        "version": "6.0.1"
\n      }
\n    ],
\n    [
\n      "matlabmcr",
\n      {
\n        "version": "2018a"
\n      }
\n    ],
\n    [
\n      "minc",
\n      {
\n        "version": "1.9.15"
\n      }
\n    ],
\n    [
\n      "mrtrix3",
\n      {
\n        "version": "3.0_RC3"
\n      }
\n    ],
\n    [
\n      "petpvc",
\n      {
\n        "version": "1.2.2"
\n      }
\n    ],
\n    [
\n      "spm12",
\n      {
\n        "version": "r7219"
\n      }
\n    ]
\n  ]
\n}' > /neurodocker/neurodocker_specs.json

%environment
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export ND_ENTRYPOINT="/neurodocker/startup.sh"
export PATH="/opt/afni-latest:$PATH"
export AFNI_PLUGINPATH="/opt/afni-latest"
export ANTSPATH="/opt/ants-2.3.1"
export PATH="/opt/ants-2.3.1:$PATH"
export C3DPATH="/opt/convert3d-1.0.0"
export PATH="/opt/convert3d-1.0.0/bin:$PATH"
export PATH="/opt/dcm2niix-master/bin:$PATH"
export FREESURFER_HOME="/opt/freesurfer-6.0.0-min"
export PATH="/opt/freesurfer-6.0.0-min/bin:$PATH"
export FSLDIR="/opt/fsl-6.0.1"
export PATH="/opt/fsl-6.0.1/bin:$PATH"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu:/opt/matlabmcr-2018a/v94/runtime/glnxa64:/opt/matlabmcr-2018a/v94/bin/glnxa64:/opt/matlabmcr-2018a/v94/sys/os/glnxa64:/opt/matlabmcr-2018a/v94/extern/bin/glnxa64"
export MATLABCMD="/opt/matlabmcr-2018a/v94/toolbox/matlab"
export PATH="/opt/mrtrix3-3.0_RC3/bin:$PATH"
export PATH="/opt/petpvc-1.2.2/bin:$PATH"
export FORCE_SPMMCR="1"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu:/opt/matlabmcr-2010a/v713/runtime/glnxa64:/opt/matlabmcr-2010a/v713/bin/glnxa64:/opt/matlabmcr-2010a/v713/sys/os/glnxa64:/opt/matlabmcr-2010a/v713/extern/bin/glnxa64"
export MATLABCMD="/opt/matlabmcr-2010a/v713/toolbox/matlab"

%runscript
/neurodocker/startup.sh "$@"

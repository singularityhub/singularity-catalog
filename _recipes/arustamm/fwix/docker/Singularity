Bootstrap: docker
From: nvidia/cuda:12.3.1-devel-ubuntu20.04
Stage: spython-base

%labels
maintainer="Rustam Akhmadiev"
email="akhmarust@sep.stanford.edu"
%post

# need to set the timezone when building
TZ=America/Los_Angeles
ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
apt update
apt install -y tzdata

apt-get -y update &&\
apt-get -y  install g++ python3-numpy git make gcc libboost-all-dev  libboost-dev &&\
apt-get -y install python3-dev python3-pytest python3-venv libtbb-dev&& \
apt-get -y  install gfortran libfftw3-3 libfftw3-dev python3-pip libssl-dev &&\
apt-get -y install flex libxaw7-dev  &&\
apt-get -y clean

pip3 install cmake --upgrade
PATH=~/.local/bin:$PATH

git clone https://github.com/opencv/opencv.git /opt/opencv/src && cd /opt/opencv/src && git checkout 4.x &&\
mkdir /opt/opencv/build && cd /opt/opencv/build  &&\
cmake -DBUILD_LIST=core ../src &&\
make -j8 install

sepflags="-O3 -ffast-math -DNDEBUG -DBOOST_DISABLE_ASSERTS -funroll-loops"

git clone http://zapad.stanford.edu/SEP-external/sep-iolibs.git /opt/sep-io/src && \
mkdir /opt/sep-io/build && \
cd /opt/sep-io/src && git submodule update --init --recursive && \
cd external/genericIO && git checkout rustam-dev && \
cd /opt/sep-io/src && git add . &&\
cd /opt/sep-io/build &&\
cmake -DCMAKE_INSTALL_PREFIX=/opt/SEP -DCMAKE_CXX_FLAGS="$sepflags" \
-DBUILD_TEST=ON -DBUILD_SEP=ON -DBUILD_SEGYIO=OFF -DBUILD_GCP=OFF -DBUILD_UTIL=OFF \
-DBENCHMARK_DOWNLOAD_DEPENDENCIES=ON -DBUILD_SHARED_LIBS=OFF -DBUILD_PYTHON=ON ../src &&\
cd /opt/sep-io/build && \
make -j8 install

git clone --branch rustam-dev http://cees-gitlab.stanford.edu/ettore88/python-solver.git /opt/python-solver

pip install notebook &&\
pip install h5py &&\
pip install numba &&\
pip install scipy &&\
pip install -U matplotlib &&\
apt-get -y update &&\
apt-get -y install vim

cd /opt && \
apt-get -y install wget &&\
wget https://github.com/ispc/ispc/releases/download/v1.17.0/ispc-v1.17.0-linux.tar.gz  &&\
tar -xvf ispc-v1.17.0-linux.tar.gz &&\
mv ispc-v1.17.0-linux/bin/ispc /usr/local/bin &&\
rm -rf ispc-v1.17.0-linux ispc-v1.17.0-linux.tar.gz

git clone https://github.com/pybind/pybind11.git /opt/pybind11/src && \
mkdir /opt/pybind11/build &&\
cd /opt/pybind11/build && \
cmake -DCMAKE_INSTALL_PREFIX=/usr/local ../src  &&\
make -j 4 install

pip install dask distributed dask_jobqueue
pip install "holoviews[recommended]"
pip install numba

mkdir -p /home
cd /home

PYTHONPATH=/opt/SEP/lib/python3.8
PYTHONPATH=/opt/python-solver/GenericSolver/python:$PYTHONPATH
LD_LIBRARY_PATH=/opt/SEP/lib
PATH=$PATH:/opt/SEP/bin

# EXPOSE 8888

%environment
export TZ=America/Los_Angeles
export PATH=~/.local/bin:$PATH
export PYTHONPATH=/opt/SEP/lib/python3.8
export PYTHONPATH=/opt/python-solver/GenericSolver/python:$PYTHONPATH
export LD_LIBRARY_PATH=/opt/SEP/lib
export PATH=$PATH:/opt/SEP/bin
%runscript
cd /home
exec /bin/bash "$@"
%startscript
cd /home
exec /bin/bash "$@"
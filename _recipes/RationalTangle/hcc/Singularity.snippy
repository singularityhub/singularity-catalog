Bootstrap: docker
From: nvidia/cuda:10.2-cudnn7-devel-ubuntu16.04

%environment

  # use bash as default shell
  SHELL=/bin/bash

  # add CUDA paths
  CPATH="/usr/local/cuda/include:$CPATH"
  PATH="/usr/local/cuda/bin:$PATH"
  LD_LIBRARY_PATH="/usr/local/cuda/lib64:$LD_LIBRARY_PATH"
  CUDA_HOME="/usr/local/cuda"

  # add Anaconda path
  PATH="/usr/local/anaconda3/bin:$PATH"

  export PATH LD_LIBRARY_PATH CPATH CUDA_HOME

%setup
  # runs on host
  # the path to the image is $SINGULARITY_ROOTFS

%post
  # post-setup script

  # load environment variables
  . /environment

  # use bash as default shell
  echo "\n #Using bash as default shell \n" >> /environment
  echo 'SHELL=/bin/bash' >> /environment

  # make environment file executable
  chmod +x /environment

  # default mount paths
  mkdir /scratch /data 

  #Add CUDA paths
  echo "\n #Cuda paths \n" >> /environment
  echo 'export CPATH="/usr/local/cuda/include:$CPATH"' >> /environment
  echo 'export PATH="/usr/local/cuda/bin:$PATH"' >> /environment
  echo 'export LD_LIBRARY_PATH="/usr/local/cuda/lib64:$LD_LIBRARY_PATH"' >> /environment
  echo 'export CUDA_HOME="/usr/local/cuda"' >> /environment

  # updating and getting required packages
  apt-get update
  apt-get install -y apt-utils wget git vim build-essential cmake
  apt-get update && apt-get -y --no-install-recommends install \
  libstdc++6 \ 
  libbz2-1.0 \
  autoconf \
  unzip \
  bzip2 \
  gzip \
  wget \
  perl \
  less \
  libdatetime-perl \
  libxml-simple-perl \
  libdigest-md5-perl \
  default-jre \
  bioperl \
  hmmer \
  zlib1g-dev \
  python \
  python3 \
  liblzma-dev \
  libbz2-dev \
  xz-utils \ 
  curl \
  libcurl4-openssl-dev \
  libssl-dev \
  make && apt-get clean && apt-get autoclean && rm -rf /var/lib/apt/lists/* 

  # creates a build directory
  mkdir build
  cd build
  
  wget https://github.com/tseemann/snippy/archive/v4.6.0.tar.gz && \
  tar -zxf v4.6.0.tar.gz && \
  rm v4.6.0.tar.gz && \
  mkdir /data

  PATH="${PATH}:\
  /snippy-4.6.0/bin:\
  /snippy-4.6.0/binaries/linux:\
  /snippy-4.6.0/binaries/noarch" \
    LC_ALL=C
  export PATH
  

Bootstrap: docker
From: pytorch/pytorch:1.8.0-cuda11.1-cudnn8-devel
#From: nvidia/cuda:11.1.1-cudnn8-devel-ubuntu20.04
#From: nvidia/cuda:11.3.0-cudnn8-devel-ubuntu20.04
#From: nvidia/cuda:10.2-cudnn7-devel-ubuntu16.04

%environment

  # use bash as default shell
  SHELL=/bin/bash

  # add CUDA paths
  CPATH="/usr/local/cuda/include:$CPATH"
  PATH="/usr/local/cuda/bin:$PATH"
  LD_LIBRARY_PATH="/usr/local/nvidia/lib:/usr/local/nvidia/lib64:$LD_LIBRARY_PATH"
  CUDA_HOME="/usr/local/cuda"
  NVIDIA_VISIBLE_DEVICES=all
  NVIDIA_DRIVER_CAPABILITIES=compute,utility
  # add conda path
  PATH="/opt/conda/bin:$PATH"

  export PATH LD_LIBRARY_PATH CPATH CUDA_HOME NVIDIA_VISIBLE_DEVICES NVIDIA_DRIVER_CAPABILITIES

%setup
  # runs on host
  # the path to the image is $SINGULARITY_ROOTFS

%post
  # post-setup script

  # load environment variables
  . /environment

  # use bash as default shell
  echo "\n #Using bash as default shell \n" >> /environment
  echo 'SHELL=/bin/bash' >> /environment

  # make environment file executable
  chmod +x /environment

  # default mount paths
  mkdir /scratch /data 

  #Add CUDA paths
  echo "\n #Cuda paths \n" >> /environment
  echo 'export CPATH="/usr/local/cuda/include:$CPATH"' >> /environment
  echo 'export PATH="/usr/local/cuda/bin:$PATH"' >> /environment
  echo 'export LD_LIBRARY_PATH="/usr/local/cuda/lib64:$LD_LIBRARY_PATH"' >> /environment
  echo 'export CUDA_HOME="/usr/local/cuda"' >> /environment

  # updating and getting required packages
  apt-get -qq -y  update
 
  export DEBIAN_FRONTEND=noninteractive
  apt-get -qq install -y --no-install-recommends tzdata apt-utils 
  ln -fs /usr/share/zoneinfo/America/Chicago /etc/localtime
  dpkg-reconfigure --frontend noninteractive  tzdata

  apt-get install -y --no-install-recommends wget git vim build-essential cmake

  # creates a build directory
  mkdir build
  cd build

  #download and install miniconda and basics
  #curl -fsSL -v -o ~/miniconda.sh -O  https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-#x86_64.sh  && \
  #chmod +x ~/miniconda.sh && \
  #~/miniconda.sh -b -p /opt/conda && \
  #rm ~/miniconda.sh && \
  #/opt/conda/bin/conda install -y python=3.8 conda-build pyyaml numpy ipython && \
  #/opt/conda/bin/conda clean -ya


  #install mamba
  /opt/conda/bin/conda install mamba -n base -c conda-forge

  #install pytorch
  /opt/conda/bin/mamba install pytorch torchvision torchtext cudatoolkit=11.1 -c pytorch -c conda-forge
  
  #install nice stuff
  /opt/conda/bin/mamba install -y cython numba bcolz zarr networkx dask seaborn pandas numexpr unidecode ipython -c conda-forge
  
  #install boolean network stuff
  /opt/conda/bin/pip install -U dynpy cana
  
  #install other pip stuff (including tensorflow+keras)
  /opt/conda/bin/pip install fastai matplotlib graphillion tensorflow keras pytorch-lightning
  
  #install pytorch geometric
  /opt/conda/bin/pip install torch-scatter
  /opt/conda/bin/pip install torch-cluster
  /opt/conda/bin/pip install torch-spline-conv
  /opt/conda/bin/pip install torch-geometric

  #conda cleanup
  /opt/conda/bin/conda clean -ya

  #apt cleanup
  apt-get autoremove -y


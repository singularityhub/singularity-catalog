Bootstrap: debootstrap
OSVersion: stretch 
MirrorURL: http://httpredir.debian.org/debian

%post
apt update 
apt dist-upgrade -y 
apt install -y python python-setuptools environment-modules tcl
apt install -y python-pip
apt install -y bzip2 gzip tar zip unzip xz-utils 
apt install -y curl wget
apt install -y patch make
apt install -y file git debianutils
apt install -y gcc 
apt install -y libibverbs-dev 
apt install -y libssl-dev
apt install -y binutils libthread-queue-any-perl

# install EasyBuild using pip
pip install -U pip
pip install wheel
pip install -U setuptools
pip install 'vsc-install<0.11.4' 'vsc-base<2.9.0'
pip install easybuild

# create 'easybuild' user (if missing)
id easybuild || useradd -s /bin/bash -m easybuild

# create /app software installation prefix + /scratch sandbox directory
if [ ! -d /app ]; then mkdir -p /app; chown easybuild:easybuild -R /app; fi
if [ ! -d /scratch ]; then mkdir -p /scratch; chown easybuild:easybuild -R /scratch; fi
if [ ! -d /home/easybuild ]; then mkdir -p /home/easybuild; chown easybuild:easybuild -R /home/easybuild;fi

# verbose commands, exit on first error
set -ve
set -o noclobber
cat > /home/easybuild/Salmon-1.3.0-gompi-2020a.eb << 'EOD'
easyblock = 'CMakeMake'
name = 'Salmon'
version = '1.3.0'
homepage = 'https://github.com/COMBINE-lab/salmon'
description = """Salmon is a wicked-fast program to produce a highly-accurate,
 transcript-level quantification estimates from RNA-seq data."""
toolchain = {'name': 'gompi', 'version': '2020a'}
toolchainopts = {'pic': True, 'openmp': True}
github_account = 'COMBINE-lab'
source_urls = [GITHUB_LOWER_SOURCE]
sources = ['v%(version)s.tar.gz']
checksums = ['c105be481630d57e7022bf870eb040857834303abff05fe0e971dda5ed6f0236']
builddependencies = [
    ('CMake', '3.16.4'),
    ('pkg-config', '0.29.2'),
    ('jemalloc', '5.2.1'),
]
dependencies = [
    ('Boost', '1.72.0'),
    ('tbb', '2020.1'),
]
configopts = '-DJEMALLOC_ROOT=$EBROOTJEMALLOC -DNO_IPO=1'
pretestopts = "unset LD_PRELOAD && "
runtest = 'test'
sanity_check_paths = {
    'files': ['bin/%(namelower)s'] + ['lib/lib%s.a' % x for x in ['graphdump', 'ntcard', 'salmon_core', 'twopaco']],
    'dirs': [],
}
sanity_check_commands = ["salmon --help"]
moduleclass = 'bio'
EOD

cat > /home/easybuild/jemalloc-5.2.1-GCCcore-9.3.0.eb << 'EOD'
easyblock = 'ConfigureMake'

name = 'jemalloc'
version = '5.2.1'

homepage = 'http://jemalloc.net'
description = """jemalloc is a general purpose malloc(3) implementation that emphasizes fragmentation avoidance and
 scalable concurrency support."""

toolchain = {'name': 'GCCcore', 'version': '9.3.0'}

source_urls = ['https://github.com/jemalloc/jemalloc/archive']
sources = ['%(version)s.tar.gz']
checksums = ['ed51b0b37098af4ca6ed31c22324635263f8ad6471889e0592a9c0dba9136aea']

builddependencies = [
    ('Autotools', '20180311'),
    ('binutils', '2.34'),
]

# From version 5.2.1 (or maybe earlier) it does no longer build,
# nor try to install, documentation if xsltproc is missing.
# So we can use normal installation.
preconfigopts = "./autogen.sh && "
configopts = "--with-version=%(version)s-0-g0000 "  # build with version info

sanity_check_paths = {
    'files': ['bin/jeprof', 'lib/libjemalloc.a', 'lib/libjemalloc_pic.a', 'lib/libjemalloc.%s' % SHLIB_EXT,
              'include/jemalloc/jemalloc.h'],
    'dirs': [],
}

# jemalloc can be used via $LD_PRELOAD, but we don't enable this by
# default, you need to opt-in to it
# modextrapaths = {'LD_PRELOAD': ['lib/libjemalloc.%s' % SHLIB_EXT]}

moduleclass = 'lib'
EOD
# We set this so if we need to open the container again, we got the environment set up correctly
cat >> /home/easybuild/.bashrc << 'EOG'
export EASYBUILD_PREFIX=/scratch 
export EASYBUILD_TMPDIR=/scratch/tmp
export EASYBUILD_SOURCEPATH=/scratch/sources:/tmp/easybuild/sources
export EASYBUILD_INSTALLPATH=/app
export EASYBUILD_PARALLEL=4
export MODULEPATH=/app/modules/all
alias eb="eb --robot --modules-tool=EnvironmentModulesC --module-syntax=Tcl --download-timeout=1000"
EOG

# configure EasyBuild
cat > /home/easybuild/eb-install.sh << 'EOD'
#!/bin/bash  
shopt -s expand_aliases
export EASYBUILD_PREFIX=/scratch 
export EASYBUILD_TMPDIR=/scratch/tmp 
export EASYBUILD_SOURCEPATH=/scratch/sources:/tmp/easybuild/sources 
export EASYBUILD_INSTALLPATH=/app 
export EASYBUILD_PARALLEL=4
alias eb="eb --robot --modules-tool=EnvironmentModulesC --module-syntax=Tcl --download-timeout=1000"
EOD
echo "eb  --fetch /home/easybuild/jemalloc-5.2.1-GCCcore-9.3.0.eb" >>  /home/easybuild/eb-install.sh 
echo "eb /home/easybuild/jemalloc-5.2.1-GCCcore-9.3.0.eb" >>  /home/easybuild/eb-install.sh 
echo "eb --fetch Salmon-1.3.0-gompi-2020a.eb" >>  /home/easybuild/eb-install.sh 
echo "eb Salmon-1.3.0-gompi-2020a.eb" >>  /home/easybuild/eb-install.sh 

chmod a+x /home/easybuild/eb-install.sh

su -l easybuild -c /home/easybuild/eb-install.sh

# cleanup, everything in /scratch is assumed to be temporary
rm -rf /scratch/*

%runscript
eval "$@"

%environment
# make sure that 'module' is defined
. /etc/profile
# purge any modules that may be loaded outside container
unset LOADEDMODULES
unset _LMFILES_
# avoid picking up modules from outside of container
module unuse $MODULEPATH
# pick up modules installed in /app
module use /app/modules/all
# load module(s) corresponding to installed software
module load Salmon/1.3.0-gompi-2020a 
 
%labels
Author J. Sassmannshausen <jorg.sassmannshausen@kcl.ac.uk>
Salmon-1.3.0-gompi-2020a

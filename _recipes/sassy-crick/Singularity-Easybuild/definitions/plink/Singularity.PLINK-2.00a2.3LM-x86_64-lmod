Bootstrap: yum
OSVersion: 7
MirrorURL: http://mirror.centos.org/centos-%{OSVERSION}/%{OSVERSION}/os/x86_64/
Include: yum

%post
yum --assumeyes update
yum install --quiet --assumeyes epel-release
yum install --quiet --assumeyes python setuptools Lmod
yum install --quiet --assumeyes python-pip
yum install --quiet --assumeyes bzip2 gzip tar zip unzip xz
yum install --quiet --assumeyes curl wget
yum install --quiet --assumeyes patch make
yum install --quiet --assumeyes file git which
yum install --quiet --assumeyes gcc-c++
yum install --quiet --assumeyes perl-Data-Dumper
yum install --quiet --assumeyes perl-Thread-Queue
yum install --quiet --assumeyes libibverbs-dev libibverbs-devel rdma-core-devel
yum install --quiet --assumeyes openssl-devel libssl-dev libopenssl-devel openssl

# install EasyBuild using pip
pip install -U pip
pip install wheel
pip install -U setuptools
pip install 'vsc-install<0.11.4' 'vsc-base<2.9.0'
pip install easybuild

# create 'easybuild' user (if missing)
id easybuild || useradd easybuild

# create /app software installation prefix + /scratch sandbox directory
if [ ! -d /app ]; then mkdir -p /app; chown easybuild:easybuild -R /app; fi
if [ ! -d /scratch ]; then mkdir -p /scratch; chown easybuild:easybuild -R /scratch; fi
if [ ! -d /home/easybuild ]; then mkdir -p /home/easybuild; chown easybuild:easybuild -R /home/easybuild;fi

# install Lmod RC file
cat > /etc/lmodrc.lua << EOD
scDescriptT = {
  {
    ["dir"]       = "/app/lmodcache",
    ["timestamp"] = "/app/lmodcache/timestamp",
  },
}
EOD

# verbose commands, exit on first error
set -ve
set -o noclobber
cat > /home/easybuild/PLINK-2.00a2.3LM-x86_64.eb << EOD
easyblock = 'PackedBinary'
name = 'PLINK'
version = '2.00a2.3LM-x86_64'
homepage = 'https://www.cog-genomics.org/plink/2.0/'
description = 'Whole-genome association analysis toolset'
toolchain = SYSTEM
source_urls = ['https://s3.amazonaws.com/plink2-assets/alpha2']
sources = ['plink2_linux_x86_64.zip']
checksums = ['3fa20a2058df542e928b11d715cc314c01d7c5961525b55fd17a088e6caa9cc9']
sanity_check_paths = {
    'files': ['plink2'],
    'dirs': [],
}
moduleclass = 'bio'
EOD
# configure EasyBuild
cat > /home/easybuild/eb-install.sh << 'EOD'
#!/bin/bash  
export EASYBUILD_PREFIX=/scratch 
export EASYBUILD_TMPDIR=/scratch/tmp 
export EASYBUILD_SOURCEPATH=/scratch/sources:/tmp/easybuild/sources 
export EASYBUILD_INSTALLPATH=/app 
export EASYBUILD_PARALLEL=4
EOD
echo "eb /home/easybuild/PLINK-2.00a2.3LM-x86_64.eb --robot" >>  /home/easybuild/eb-install.sh 
cat >> /home/easybuild/eb-install.sh << 'EOD'
mkdir -p /app/lmodcache 
$LMOD_DIR/update_lmod_system_cache_files -d /app/lmodcache -t /app/lmodcache/timestamp /app/modules/all  
EOD

chmod a+x /home/easybuild/eb-install.sh

su -l easybuild -c /home/easybuild/eb-install.sh

# cleanup, everything in /scratch is assumed to be temporary
rm -rf /scratch/*

%runscript
eval "$@"

%environment
# make sure that 'module' and 'ml' commands are defined
source /etc/profile
# increase threshold time for Lmod to write cache in $HOME (which we don't want to do)
export LMOD_SHORT_TIME=86400
# purge any modules that may be loaded outside container
module --force purge
# avoid picking up modules from outside of container
module unuse $MODULEPATH
# pick up modules installed in /app
module use /app/modules/all
# load module(s) corresponding to installed software
module load PLINK/2.00a2.3LM-x86_64 
 
%labels
PLINK-2.00a2.3LM-x86_64

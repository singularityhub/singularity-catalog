Bootstrap: yum
OSVersion: 8.9
MirrorURL: https://vault.almalinux.org/%{OSVERSION}/BaseOS/x86_64/os/ 
Include: yum

%post
## yum --assumeyes update # We need to stick with version 8.5!
yum install --quiet --assumeyes epel-release
# This is needed for the change to CentOS8 which we need in Rocky8 too
yum install --quiet --assumeyes dnf-plugins-core 
dnf config-manager --set-enabled powertools 
yum install --quiet --assumeyes python3 environment-modules
yum install --quiet --assumeyes python3-pip
yum install --quiet --assumeyes bzip2 gzip tar zip unzip xz
yum install --quiet --assumeyes curl wget rsync cpio
yum install --quiet --assumeyes patch make
yum install --quiet --assumeyes file git which
yum install --quiet --assumeyes gcc-c++
yum install --quiet --assumeyes perl-Data-Dumper
yum install --quiet --assumeyes perl-Thread-Queue
yum install --quiet --assumeyes libibverbs-devel rdma-core-devel
yum install --quiet --assumeyes openssl-devel openssl
yum install --quiet --assumeyes ncurses-term tcsh findutils hostname p7zip-plugins 
yum install --quiet --assumeyes diffutils compat-openssl10 vim-enhanced
yum clean all

# install EasyBuild using pip3
python3 -m pip install -U pip
python3 -m pip install wheel
python3 -m pip install -U setuptools==58.5.3
python3 -m pip install easybuild==5.0.0
python3 -m pip install rich
python3 -m pip install PyYAML

# create 'easybuild' user (if missing)
id easybuild || useradd easybuild

# create /apps and /sw-eb software installation prefix + /scratch sandbox directory
if [ ! -d /apps ]; then mkdir -p /apps; chown easybuild:easybuild -R /apps; fi
if [ ! -d /sw-eb ]; then mkdir -p /sw-eb; chown easybuild:easybuild -R /sw-eb; fi
if [ ! -d /scratch ]; then mkdir -p /scratch; chown easybuild:easybuild -R /scratch; fi
if [ ! -d /software ]; then mkdir -p /software; chown easybuild:easybuild -R /software; fi
if [ ! -d /home/easybuild ]; then mkdir -p /home/easybuild; chown easybuild:easybuild -R /home/easybuild;fi

# verbose commands, exit on first error
set -ve
set -o noclobber

# We set this so if we need to open the container again, we got the environment set up correctly
cat >> /home/easybuild/.bashrc << 'EOG'
export EASYBUILD_SOURCEPATH=/software/sources
# export EASYBUILD_INSTALLPATH=/apps/sw-eb
export EASYBUILD_INSTALLPATH=/sw-eb
export EASYBUILD_TMPDIR="/dev/shm/${USER}"
export EASYBUILD_BUILDPATH="/dev/shm/${USER}"
export EASYBUILD_PARALLEL=1
export EASYBUILD_ACCEPT_EULA_FOR=Intel-oneAPI,NVHPC
# export MODULEPATH=/apps/sw-eb/modules/all
export MODULEPATH=/sw-eb/modules/all

alias eb="eb --robot --download-timeout=1000 --modules-tool=EnvironmentModules --module-syntax=Tcl --allow-modules-tool-mismatch --hooks=/software/hooks/site-hooks.py"
export PYTHONIOENCODING="utf-8"
EOG

# configure EasyBuild
cat > /home/easybuild/eb-install.sh << 'EOD'
#!/bin/bash  
shopt -s expand_aliases
export EASYBUILD_SOURCEPATH=/software/sources
# export EASYBUILD_INSTALLPATH=/apps/sw-eb
export EASYBUILD_INSTALLPATH=/sw-eb
export EASYBUILD_TMPDIR="/dev/shm/${USER}"
export EASYBUILD_BUILDPATH="/dev/shm/${USER}"
export EASYBUILD_PARALLEL=1
export EASYBUILD_ACCEPT_EULA_FOR=Intel-oneAPI,NVHPC
# export MODULEPATH=/apps/sw-eb/modules/all
export MODULEPATH=/sw-eb/modules/all

alias eb="eb --robot --download-timeout=1000 --modules-tool=EnvironmentModules --module-syntax=Tcl --allow-modules-tool-mismatch --hooks=/software/hooks/site-hooks.py"
export PYTHONIOENCODING="utf-8"

ulimit -l unlimited
# For interative runs, we need to remove all the SLURM environments
echo "For interactive runs, please do:"
echo "# for i in \$(export | grep SLURM); do unset \$( echo \$i | grep SLURM | awk -F "=" '{print \$1}' )  ; done"
echo "# for i in \$(export | grep SLURM); do echo \$i; done"
EOD

chown easybuild:easybuild /home/easybuild/eb-install.sh
chmod a+x /home/easybuild/eb-install.sh

%runscript
eval "$@"

%environment
# this seems to be needed to make sure the terminal is working:
export TERM=xterm-256color
# make sure that 'module' and 'ml' commands are defined
source /etc/profile.d/modules.sh 
# purge any modules that may be loaded outside container
unset LOADEDMODULES
unset _LMFILES_
# avoid picking up modules from outside of container
module unuse $MODULEPATH
# pick up modules installed in /apps for generic and /sw-eb for specific builds
# export MODULEPATH="/apps/sw-eb/modules/all"
export MODULEPATH=/sw-eb/modules/all
# setting up the installation environment:
USER=$(whoami)
shopt -s expand_aliases
export EASYBUILD_SOURCEPATH=/software/sources
# Use this if you are working for the generic build:
# export EASYBUILD_INSTALLPATH=/apps/sw-eb
# This is for the architectur specific builds:
export EASYBUILD_INSTALLPATH=/sw-eb
export EASYBUILD_TMPDIR="/dev/shm/${USER}"
export EASYBUILD_BUILDPATH="/dev/shm/${USER}"
export EASYBUILD_PARALLEL="24"
export EASYBUILD_ACCEPT_EULA_FOR="Intel-oneAPI,NVHPC"
alias eb="eb --robot --download-timeout=1000 --modules-tool=EnvironmentModules --module-syntax=Tcl --allow-modules-tool-mismatch --hooks=/software/hooks/site-hooks.py"
export PYTHONIOENCODING="utf-8"

%labels
Author J. Sassmannshausen <j.sassmannshausen@imperial.ac.uk>
EasyBuild-version 4.9.4
Software build container


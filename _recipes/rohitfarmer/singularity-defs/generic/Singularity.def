BootStrap: docker
From: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04

%labels

    APPLICATION_NAME tensorflow-gpu
    SYSTEM_NAME None Specific
    AUTHOR_NAME Rohit Farmer
    AUTHOR_EMAIL rohit.farmer@gmail.com
    AUTHOR_WEBSITE https://rohitfarmer.dev

%help

    This container conatins latest versions of:
	    Python 3
        Tensorflow-gpu with Keras
        Numpy, Pandas,  Scipy, Sklearn (latest), Matplotlib

%setup

%environment

    # Set system locale
    LD_LIBRARY_PATH=/usr/local/cuda-9.0/lib64:/usr/local/cuda-9.0/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/.singularity.d/libs
    PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
    LANG=C.UTF-8 LC_ALL=C.UTF-8

  
%post
    
    # Make filesystem mount points
    mkdir /scratch

    # Change to tmp directory to download temporary files
    cd /tmp

    apt-get -qq -y update --fix-missing
    apt-get -qq install -y --no-install-recommends \
        autoconf \
        automake \
        build-essential \
        ca-certificates \
        cmake \
        gcc \
        g++ \
        gfortran \
        git \
        libtool \
        libjpeg-dev \
        libpng-dev \
        libatlas-base-dev \
        libxml2-dev \
        zlib1g-dev \
        libcairo2-dev \
        libeigen2-dev \
        libeigen3-dev \
        libcupti-dev \
        libpcre3-dev \
        sqlite3 \
        libsqlite3-dev \
        libssl-dev \
        libboost-dev \
        libboost-system-dev \
        libboost-thread-dev \
        libboost-serialization-dev \
        libboost-python-dev \
        libboost-regex-dev \
        mercurial \
        vim \
        wget \
        pkg-config \
        python3 \
        python3-dev \
        python3-pip \
        python3-setuptools \
        r-base \
        r-base-dev \
        zip

    export LANG=C.UTF-8 LC_ALL=C.UTF-8

# Update pip
    # python3 -m pip -q --no-cache-dir install --upgrade pip

# Additional python packages
    # python3 -m pip -q --no-cache-dir install numpy pandas h5py pyarrow sklearn statsmodels matplotlib seaborn plotly

# Install Tensorflow-gpu
    # python3 -m pip -q --no-cache-dir install tensorflow-gpu

# Install R packages
    #R --silent --slave -e 'install.packages("devtools", repos="https://cloud.r-project.org/")'
    R --silent --slave -e 'install.packages(c("circlize", "cluster", "data.table", "ggdendro", "gplots", "gridExtra", "lazyeval", "plyr", "pROC", "rlang", "tidyverse", "tmod", "WGCNA"), repos="https://cloud.r-project.org/")' > /dev/null
    
    R --silent --slave -e 'if (!requireNamespace("BiocManager")) install.packages("BiocManager", repos="https://cloud.r-project.org/")' > /dev/null
    R --silent --slave -e 'library("BiocManager") BiocManager::install()'
    R --silent --slave -e 'library("BiocManager") BiocManager::install(c("affy", "Biobase", "ComplexHeatmap", "genefilter", "GEOquery", "mygene"))' > /dev/null

# Cleanup
    apt-get -qq clean
    rm -rf /var/lib/apt/lists/* > /dev/null
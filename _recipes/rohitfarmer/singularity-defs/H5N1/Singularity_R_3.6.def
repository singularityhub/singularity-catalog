BootStrap: docker
From: ubuntu:xenial

%labels
    APPLICATION_NAME H5N1 Workflow
    AUTHOR_NAME Rohit Farmer
    AUTHOR_EMAIL rohit.farmer@gmail.com
    YEAR 2019

%help
    This container conatins:
        R 3.6; Bioconductor 3.6 
    R Packages:
        circlize, cluster, data.table, ggdendro, gplots, gridExtra, lazyeval, 
        plyr, pROC, rlang, tidyverse, tmod, eNetXplorer, missForest, RMySQL ,
        WGCNA
    Bioconductor Packages:
        impute, preprocessCore, GO.db, AnnotationDbi, affy, Biobase, 
        ComplexHeatmap, genefilter, GEOquery, mygene

%environment
    # Set system locale
    PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
    LANG=C.UTF-8 LC_ALL=C.UTF-8

%post
    # Change to tmp directory to download temporary files
    cd /tmp

    echo "Installing compilers and libraries"
    apt-get -qq -y update --fix-missing
    apt-get -qq install -y --no-install-recommends apt-utils 
    apt-get -qq -y update --fix-missing
    apt-get -qq install -y --no-install-recommends \
        autoconf \
        automake \
        build-essential \
        bzip2 \
        ca-certificates \
        cmake \
        gcc \
        g++ \
        gfortran \
        git \
        libtool \
        libjpeg-dev \
        libpng-dev \
        libtiff-dev \
        libatlas-base-dev \
        libxml2-dev \
        zlib1g-dev \
        libcairo2-dev \
        libeigen3-dev \
        libcupti-dev \
        libpcre3-dev \
        libssl-dev \
        libcurl4-openssl-dev \
        libboost-dev \
        libboost-system-dev \
        libboost-thread-dev \
        libboost-serialization-dev \
        libboost-regex-dev \
        libgtk2.0-dev \
        libreadline-dev \
        libbz2-dev \
        liblzma-dev \
        libpcre++-dev \
        libpango1.0-dev \
        libmariadb-client-lgpl-dev \
        libopenblas-dev \
        liblapack-dev \
        libxt-dev \
        openjdk-8-jdk \
        python3-dev \
        python3-pip \
        python3-setuptools \
        python-software-properties \
        python3-software-properties \
        software-properties-common \
        texlive \
        texlive-fonts-extra \
        texinfo \
        wget \
        xvfb \
        xauth \
        xfonts-base \
        zip

        add-apt-repository ppa:neovim-ppa/stable
        apt-get -qq -y update --fix-missing
        apt-get -qq install -y --no-install-recommends neovim

    export LANG=C.UTF-8 LC_ALL=C.UTF-8

# Install VIM
        echo "Installing VIM"
        if [ -d vim ]; then
           rm -rf vim
        fi
        git clone https://github.com/vim/vim.git
        make -C vim/
        make install -C vim/

# Install R 3.6
        echo "Installing R 3.6"
        wget -q https://cran.r-project.org/src/base/R-3/R-3.6.2.tar.gz > /dev/null      
        tar -zxf R-3.6.2.tar.gz > /dev/null
        cd R-3.6.2
        ./configure --enable-R-shlib  --with-x=no --with-cairo=yes  > /dev/null
        make > /dev/null
        make install > /dev/null

# Install R packages
        echo "Installing R packages"
        R --silent --slave -e 'install.packages(c("circlize", "cluster", "data.table", "ggdendro", "gplots", "gridExtra", "lazyeval", "plyr", "pROC", "rlang", "tidyverse", "tmod", "eNetXplorer", "missForest", "RMySQL", "fpc", "ggrepel", "ppcor", "BiocManager"), repos="https://cloud.r-project.org/")' > /dev/null
        
        R --silent --slave -e 'BiocManager::install(c("impute", "preprocessCore", "GO.db", "AnnotationDbi", "affy", "Biobase", "ComplexHeatmap", "genefilter", "GEOquery", "mygene"))' > /dev/null

        R --silent --slave -e 'install.packages(c("WGCNA"), repos="https://cloud.r-project.org/")' > /dev/null

# Cleanup
    echo "Cleaning"
    apt-get -qq clean
    rm -rf /var/lib/apt/lists/* > /dev/null
    rm -rf /tmp/vim

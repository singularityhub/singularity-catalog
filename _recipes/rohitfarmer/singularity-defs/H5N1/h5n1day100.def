BootStrap: docker
From: ubuntu:bionic

%labels
    APPLICATION_NAME Container for H5N1day100 analysis
    AUTHOR_NAME Rohit Farmer
    AUTHOR_EMAIL rohit.farmer@gmail.com
    YEAR 2020

%help
    Container for H5N1day100 analysis.

%environment
    # Set system locale
    PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
    LANG=C.UTF-8 LC_ALL=C.UTF-8
    
%post
    # Change to tmp directory to download temporary files.
    cd /tmp

    # Install essential software, languages and libraries. 
    apt-get -qq -y update
    
    export DEBIAN_FRONTEND=noninteractive
    apt-get -qq install -y --no-install-recommends tzdata apt-utils 

    ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime 
    dpkg-reconfigure --frontend noninteractive  tzdata
    
    apt-get -qq -y update 
    apt-get -qq install -y --no-install-recommends \
        autoconf \
        automake \
        build-essential \
        bzip2 \
        ca-certificates \
        cmake \
        gcc \
        g++ \
        gfortran \
        git \
        gnupg2 \
        libtool \
        libjpeg-dev \
        libpng-dev \
        libtiff-dev \
        libatlas-base-dev \
        libxml2-dev \
        zlib1g-dev \
        libcairo2-dev \
        libeigen3-dev \
        libcupti-dev \
        libpcre3-dev \
        libssl-dev \
        libcurl4-openssl-dev \
        libboost-all-dev \
        libboost-dev \
        libboost-system-dev \
        libboost-thread-dev \
        libboost-serialization-dev \
        libboost-regex-dev \
        libgtk2.0-dev \
        libreadline-dev \
        libbz2-dev \
        liblzma-dev \
        libpcre++-dev \
        libpango1.0-dev \
        libmariadb-client-lgpl-dev \
        libopenblas-dev \
        liblapack-dev \
        libxt-dev \
        neovim \
        openjdk-8-jdk \
        python3-dev \
        python3-pip \
        python3-wheel \
        software-properties-common \
        texlive \
        texlive-fonts-extra \
        texinfo \
        vim \
        wget \
        xvfb \
        xauth \
        xfonts-base \
        zip

    export LANG=C.UTF-8 LC_ALL=C.UTF-8

# Install R 3.5.1
        wget -q https://cran.r-project.org/src/base/R-3/R-3.5.1.tar.gz
        tar -zxf R-3.5.1.tar.gz
        cd R-3.5.1
        ./configure 
        make
        make install

# Install Python Packages
        python3 -m pip --no-cache-dir install --upgrade pip
        python3 -m pip --no-cache-dir install setuptools --upgrade

        python3 -m pip --no-cache-dir install snakemake==5.5.0

# Install R packages
        # CRAN Packages
        R --quiet --slave -e 'install.packages("devtools", repos="https://cloud.r-project.org/")'
        R --quiet --slave -e 'library(devtools); install_version("caTools", version = "1.17.1.2", repos="https://cloud.r-project.org/")' 
        R --quiet --slave -e 'library(devtools); install_version("tidyverse", version = "1.2.1", repos="https://cloud.r-project.org/")' 
        R --quiet --slave -e 'library(devtools); install_version("feather", version = "0.3.2", repos="https://cloud.r-project.org/")' 
        R --quiet --slave -e 'library(devtools); install_version("VennDiagram", version = "1.6.20", repos="https://cloud.r-project.org/")' 
        R --quiet --slave -e 'library(devtools); install_version("logging", version = "0.9-107", repos="https://cloud.r-project.org/")' 
        R --quiet --slave -e 'library(devtools); install_version("jsonlite", version = "1.5", repos="https://cloud.r-project.org/")' 
        R --quiet --slave -e 'library(devtools); install_version("XML", version = "3.98-1.19", repos="https://cloud.r-project.org/")' 
        R --quiet --slave -e 'library(devtools); install_version("tmod", version = "0.40", repos="https://cloud.r-project.org/")' 

# Bioconductor Packages
        R --silent --slave -e 'install.packages("BiocManager", version = "1.30", repos="https://cloud.r-project.org/")'
        R --silent --slave -e 'BiocManager::install("Biobase")'

# Cleanup
    apt-get -qq clean
    rm -rf /var/lib/apt/lists/*
    rm -rf /tmp/R-3.5.1/

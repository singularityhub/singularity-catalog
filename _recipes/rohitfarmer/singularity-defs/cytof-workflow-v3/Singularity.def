BootStrap: docker
From: ubuntu:bionic

%labels
    APPLICATION_NAME CyTOF Workflow V3
    PUBLICATION https://f1000research.com/articles/6-748/v3
    AUTHOR_NAME Rohit Farmer
    AUTHOR_EMAIL rohit.farmer@gmail.com
    YEAR 2019

%help
    This container conatins:
        R 3.6.0; Bioconductor 3.9
    R Packages:
        tidyverse, BiocManager, logging, yaml, jsonlite
    Bioconductor Packages:
        cytofWorkflow
    Python3:
        jupyter notebook

%environment
    # Set system locale
    PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
    LANG=C.UTF-8 LC_ALL=C.UTF-8
    

%post
    # Change to tmp directory to download temporary files
    cd /tmp

    echo "Installing compilers and libraries"
    apt-get -qq -y update
    
    export DEBIAN_FRONTEND=noninteractive
    apt-get -qq install -y --no-install-recommends tzdata apt-utils 

    ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime 
    dpkg-reconfigure --frontend noninteractive  tzdata
    
    apt-get -qq -y update 
    apt-get -qq install -y --no-install-recommends \
        autoconf \
        automake \
        build-essential \
        bzip2 \
        ca-certificates \
        cmake \
        gcc \
        g++ \
        gfortran \
        git \
        libtool \
        libjpeg-dev \
        libpng-dev \
        libtiff-dev \
        libatlas-base-dev \
        libxml2-dev \
        zlib1g-dev \
        libcairo2-dev \
        libeigen3-dev \
        libcupti-dev \
        libpcre3-dev \
        libssl-dev \
        libcurl4-openssl-dev \
        libboost-dev \
        libboost-system-dev \
        libboost-thread-dev \
        libboost-serialization-dev \
        libboost-regex-dev \
        libgtk2.0-dev \
        libreadline-dev \
        libbz2-dev \
        liblzma-dev \
        libpcre++-dev \
        libpango1.0-dev \
        libmariadb-client-lgpl-dev \
        libopenblas-dev \
        liblapack-dev \
        libxt-dev \
        neovim \
        openjdk-8-jdk \
        python3-dev \
        python3-pip \
        python3-setuptools \
        texlive \
        texlive-fonts-extra \
        texinfo \
        vim \
        wget \
        xvfb \
        xauth \
        xfonts-base \
        zip

    export LANG=C.UTF-8 LC_ALL=C.UTF-8

# Install R 3.6.0
#        echo "Installing R 3.6.0"
#        wget -q https://cran.r-project.org/src/base/R-3/R-3.6.0.tar.gz > /dev/null      
#        tar -zxf R-3.6.0.tar.gz > /dev/null
#        cd R-3.6.0
#        ./configure --enable-R-shlib  --with-x=no --with-cairo=yes --with-blas --enable-BLAS-shlib --with-lapack --enable-memory-profiling > /dev/null
#        make > /dev/null
#        make install > /dev/null

# Install Jupyter notebook
#        echo "Installing Jupyter notebook"
#        python3 -m pip --no-cache-dir install --upgrade pip > /dev/null
#        python3 -m pip --no-cache-dir install jupyter > /dev/null

#        R --quiet --slave -e 'install.packages(c("IRkernel"), repos="https://cloud.r-project.org/")' > /dev/null
#        R --quiet --slave -e 'IRkernel::installspec()' > /dev/null

# Install R packages
#        echo "Installing R packages"
#        R --quiet --slave -e 'install.packages(c("Cairo", "pheatmap", "tidyverse", "BiocManager", "logging", "yaml", "jsonlite", "rlang", "eNetXplorer"), repos="https://cloud.r-project.org/")' > /dev/null
        
#        R --quiet --slave -e 'BiocManager::install("cytofWorkflow")' > /dev/null

# Cleanup
    echo "Cleaning"
    apt-get -qq clean
    rm -rf /var/lib/apt/lists/* > /dev/null

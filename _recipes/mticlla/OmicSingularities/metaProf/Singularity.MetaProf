# Author(s): Monica R. Ticlla
# Afiliation(s):
#  - Swiss Tropical and Public Health Institute (SwissTPH)
#  - University of Basel (UNIBAS)
#  - Swiss Institute of Bioinformatics (SIB)

Bootstrap: docker
From: centos:7

# ==============================================================================
# Global Help
# ==============================================================================
%help
This image contains software for taxonomic and functional profiling of microbial 
communities from metagenomic shotgun sequencing data.
It was built with CentOS 7 as base OS and Python 3.6

Usage:
- To list available Apps:

  user@my_machine:> singularity apps <CONTAINER_PATH> #For Singularity 2
  user@my_machine:> singularity inspect --list-apps <CONTAINER_PATH> #For Singularity 3
  
- To get help for a particular APP:

  user@my_machine:> singularity help --app <APP_NAME> <CONTAINER_PATH> #For Singularity 2
  user@my_machine:> singularity run-help --app <APP_NAME> <CONTAINER_PATH> #For Singularity 3
  
- To run a particular APP:

  user@my_machine:> singularity run --app <APP_NAME> <CONTAINER_PATH>
  
- To execute a bash command within a particular APP environment:

  user@my_machine:> singularity exec --app <APP_NAME> <CONTAINER_PATH> <CMD>
  
- In shell mode, please notice that besides MeaPhlAn2, all the other APPs in MetaProf 
  are installed in their own conda environment within the container:
  
  - BreadCrumbs: py27breadcrumbs
  - GraPhlAn: py27graphlan
  - HUMAnN2: py27strphlan
  - MetaPhlAn2: humann2
  - PanPhlAn: py36panphlan
  - StrainPhlAn: py27strphlan
  
  Thus, in shell mode:
      From outside the container:
      user@my_machine:> singularity shell <CONTAINER_PATH>
      
      Now inside the Singularity container:
      Singularity my_container:> source activate <APP_environment> <APP_script>
      
      Example: use the graphlan.py, a python script from the APP GraPhlAn
      Singularity my_container:> source activate py27graphlan && graphlan.py --help

%labels
# ==============================================================================
# Labels
# ==============================================================================
  AUTHOR mticlla@gmail.com
  MAINTAINER mticlla@gmail.com
  BUILD_VERSION v0.1
  
# ==============================================================================
# Global Environment
# ==============================================================================
%environment
  LANG=en_US.UTF-8
  export LANG
  LANGUAGE=en_US:en
  export LANGUAGE
  LC_ALL=en_US.UTF-8
  export LC_ALL
  PATH=/opt/miniconda3/bin:$PATH
  export PATH

# ==============================================================================
# Global installation
# ==============================================================================
%post
  # set environment variables for build time
  echo "Setting environment variables for build time ..."
  LANG=en_US.UTF-8
  export LANG
  LANGUAGE=en_US:en
  export LANGUAGE
  LC_ALL=en_US.UTF-8
  export LC_ALL

  # Install core packages
  yum -y update
  echo "Installing development tools ..."
  yum -y groupinstall "Development tools"
  yum -y makecache
  yum -y install unzip
  yum -y install which
  yum -y install hg
  yum -y install gcc
  yum -y install gcc-c++
  yum -y install zlib-devel
  yum -y install libstdc++-static
  yum -y install wget
  yum -y install bzip2
  yum -y install git
  yum -y install make
  yum -y install nano
  yum -y install perl

  # Install Java
  yum -y install java-1.8.0-openjdk-devel

  # Install pigz
  yum -y install pigz

  # Install conda
  curl -sSL -O https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
  sh Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3
  rm -fr Miniconda3-latest-Linux-x86_64.sh
  PATH=/opt/miniconda3/bin:$PATH
  export PATH
  conda update --yes -n base conda
  conda install --yes gcc_linux-64
  conda install --yes gxx_linux-64
  echo "source /opt/miniconda3/etc/profile.d/conda.sh" >>$SINGULARITY_ENVIRONMENT
  
  # Add channels to conda
  conda config --add channels defaults
  conda config --add channels bioconda
  conda config --add channels conda-forge
  conda config --add channels biobakery

%runscript
  echo -e "\nThese programs are available as SCIF applications:"
  ls /scif/apps | sort -u
  echo -e "\nHow to use a SCIF APP?:"
  echo "Example: singularity run --app MetaPhlAn2 <CONTAINER_PATH> metaphlan2.py --help
                 singularity exec --app MetaPhlAn2 <CONTAINER_PATH> metaphlan2.py --help
  "

# ==============================================================================
# SCIF Apps
# ==============================================================================

# MetaPhlAn
# ==============================================================================
%applabels MetaPhlAn2
  VERSION v2.9.22(14 Oct 2019)
%appenv MetaPhlAn2
  PATH=/scif/apps/MetaPhlAn2/metaphlan2:/scif/apps/MetaPhlAn2/metaphlan2/utils:$PATH
  export PATH
%appinstall MetaPhlAn2
  PATH=/opt/miniconda3/bin:$PATH
  export PATH
  conda install --yes python=3.6 numpy pandas matplotlib scipy biopython h5py
  conda install --yes -c bioconda "Bowtie2==2.3.4.3"
  conda install --yes -c bioconda/label/cf201901 biom-format
  hg clone https://bitbucket.org/biobakery/metaphlan2
  ln -s /scif/apps/MetaPhlAn2/metaphlan2 /scif/apps/MetaPhlAn2/bin
  mpa_dir=/scif/apps/MetaPhlAn2/metaphlan2
  echo -e "mpa_dir=$mpa_dir\nexport mpa_dir">>$SINGULARITY_ENVIRONMENT
  echo "export PATH=$mpa_dir:$mpa_dir/utils:$mpa_dir/utils/hclust2:\$PATH" >>$SINGULARITY_ENVIRONMENT
%apprun MetaPhlAn2
  if [[ $@ ]]; then
      exec "$@"
  else
    echo -e "
    MetaPhlAn2 is a tool for profiling the composition of microbial communities from 
    metagenomic shotgun sequencing data.
    
    For help, run:
        $ singularity exec --app MetaPhlAn2 <CONTAINER_PATH> metaphlan2.py --help
    or
        $ singularity run --app MetaPhlAn2 <CONTAINER_PATH> metaphlan2.py --help
    
    If you use MetaPhlAn2, please cite:
    
    For more information on the technical aspects of MetaPhlAn2, or to cite MetaPhlAn2 
    in your work, please refer to:
    MetaPhlAn2 for enhanced metagenomic taxonomic profiling. Duy Tin Truong, Eric A Franzosa, 
    Timothy L Tickle, Matthias Scholz, George Weingart, Edoardo Pasolli, Adrian Tett, 
    Curtis Huttenhower & Nicola Segata. Nature Methods 12, 902-903 (2015)
    "
  fi     

# GraPhlAn
# ==============================================================================
%applabels GraPhlAn
  VERSION v1.1.3(5 June 2018)
%appenv GraPhlAn
  source activate py27graphlan
%appinstall GraPhlAn
  PATH=/opt/miniconda3/bin:$PATH
  export PATH
  conda create --yes --name py27graphlan python=2.7 biopython
  conda install --yes -n py27graphlan graphlan
  grphlan_dir=/opt/miniconda3/envs/py27graphlan/bin
  echo -e "grpa_dir=$grphlan_dir\nexport grpa_dir">>$SINGULARITY_ENVIRONMENT
  #ln -s /opt/miniconda3/envs/py27graphlan/bin/* /scif/apps/GraPhlAn/bin
%apphelp GraPhlAn
  GraPhlAn has two main scripts: graphlan_annotate.py, graphlan.py.
%apprun GraPhlAn
  if [[ $@ ]]; then
    exec "$@"
  else
    echo -e "
    GraPhlAn has two main scripts: graphlan_annotate.py, graphlan.py.
    
    For help, run:
        $ singularity exec --app GraPhlAn <CONTAINER_PATH> graphlan.py --help
    or
        $ singularity run --app GraPhlAn <CONTAINER_PATH> graphlan.py --help
    "
  fi

# StrainPhlAn
# ==============================================================================
%appenv StrainPhlAn
  source activate py27strphlan
%appinstall StrainPhlAn
  PATH=/opt/miniconda3/bin:$PATH
  export PATH
  conda create --yes --name py27strphlan python=2.7 biopython
  conda install --yes -n py27strphlan -c bioconda metaphlan2
  conda install --yes -n py27strphlan -c bioconda dendropy=3.12.3
  conda install --yes -n py27strphlan -c biobakery graphlan
  sphlan_dir=/opt/miniconda3/envs/py27strphlan/bin
  echo -e "stpa_dir=$sphlan_dir\nexport stpa_dir">>$SINGULARITY_ENVIRONMENT
%apprun StrainPhlAn
  if [[ $@ ]]; then
    exec "$@"
  else
    echo -e "
    StrainPhlAn is a tool for strain-level resolution of species across large sample sets, 
    based on single nucleotide polymorphisms (SNPs) within conserved and unique species marker genes.
    
    For help, run:
        $ singularity exec --app StrainPhlAn <CONTAINER_PATH> strainphlan.py --help
    or
        $ singularity run --app StrainPhlAn <CONTAINER_PATH> strainphlan.py --help
    
    For more information on the technical aspects of StrainPhlAn, or to cite StrainPhlAn 
    in your work, please refer to:
    Microbial strain-level population structure and genetic diversity from metagenomes. 
    Duy Tin Truong, Adrian Tett, Edoardo Pasolli, Curtis Huttenhower, & Nicola Segata. 
    Genome Research 27:626-638 (2017)
    "
  fi

# HUMAnN2
# ==============================================================================
%applabels HUMAnN2
  VERSION v2.8.1
%appenv HUMAnN2
  source activate humann2
%appinstall HUMAnN2
  PATH=/opt/miniconda3/bin:$PATH
  export PATH
  conda create --yes --name humann2
  conda install --yes -n humann2 -c biobakery humann2
  humann2_dir=/opt/miniconda3/envs/humann2/bin
  echo -e "hmn2_dir=$humann2_dir\nexport hmn2_dir">>$SINGULARITY_ENVIRONMENT
%apprun HUMAnN2
  if [[ $@ ]]; then
    exec "$@"
  else
    echo -e "
    HUMAnN (HMP Unified Metabolic Analysis Network 2) is a pipeline for efficiently and 
    accurately profiling the presence/absence and abundance of microbial pathways in 
    a community from metagenomic or metatranscriptomic sequencing data (typically millions 
    of short DNA/RNA reads).
    
    For help, run:
        $ singularity exec --app HUMAnN2 <CONTAINER_PATH> humann2 --help
    or
        $ singularity run --app HUMAnN2 <CONTAINER_PATH> humann2 --help
    
    For more information on the technical aspects of HUMAnN2, or to cite HUMAnN2 in your work, 
    please refer to:
    Franzosa EA*, McIver LJ*, Rahnavard G, Thompson LR, Schirmer M, Weingart G, Schwarzberg Lipson K, 
    Knight R, Caporaso JG, Segata N, Huttenhower C. Species-level functional profiling of metagenomes 
    and metatranscriptomes. Nat Methods 15: 962-968 (2018). 
    "
  fi
  
# PanPhlAn
# ==============================================================================
%applabels PanPhlAn
  VERSION 1.2.2.5(10 May 2018)
%appenv PanPhlAn
  source activate py36panphlan
%appinstall PanPhlAn
  PATH=/opt/miniconda3/bin:$PATH
  export PATH
  conda create --yes --name py36panphlan python=3.6 biopython numpy matplotlib
  conda install --yes -n py36panphlan -c bioconda panphlan
  panphlan_dir=/opt/miniconda3/envs/py36panphlan/bin
  echo -e "papa_dir=$panphlan_dir\nexport papa_dir">>$SINGULARITY_ENVIRONMENT
%apprun PanPhlAn
  if [[ $@ ]]; then
    exec "$@"
  else
    echo -e "
    Pangenome-based Phylogenomic Analysis (PanPhlAn) is a strain-level metagenomic 
    profiling tool for identifying the gene composition and in-vivo transcriptional 
    activity of individual strains in metagenomic samples.
    
    PanPhlAn has three main scripts: panphlan_pangenome_generation.py, panphlan_map.py, 
    and panphlan_profile.py.
    
    For help, run:
        $ singularity exec --app PanPhlAn <CONTAINER_PATH> panphlan_map.py --help
    or
        $ singularity run --app PanPhlAn <CONTAINER_PATH> panphlan_map.py --help
    
    For more information on the technical aspects of PanPhlAn, or to cite PanPhlAn in your work, 
    please refer to:
    Matthias Scholz, Doyle V. Ward, Edoardo Pasolli, Thomas Tolio, Moreno Zolfo, Francesco Asnicar, 
    Duy Tin Truong, Adrian Tett, Ardythe L. Morrow and Nicola Segata. 
    Strain-level microbial epidemiology and population genomics from shotgun metagenomics. 
    Nature Methods 13, 435–438, 2016.
    "
  fi
  
# BreadCrumbs
# ============================================================================== 
%appenv BreadCrumbs
    source activate py27breadcrumbs
%appinstall BreadCrumbs
  PATH=/opt/miniconda3/bin:$PATH
  export PATH
  conda create --yes --name py27breadcrumbs python=2.7
  conda install --yes -n py27breadcrumbs -c biobakery breadcrumbs
  breadcrumbs_dir=/opt/miniconda3/envs/py36panphlan/bin
  echo -e "bread_dir=$breadcrumbs_dir\nexport bread_dir">>$SINGULARITY_ENVIRONMENT
%apprun BreadCrumbs
  if [[ $@ ]]; then
    exec "$@"
  else
    echo -e "
    BreadCrumbs is an unofficial collection of scripts and code intended to consolidate 
    functions for tool development and contain scripts for command line access to commonly 
    used functions. Breadcrumbs tends to include functionality associated with metagenomics 
    analysis but you never know what you will find!
    
    A quick description of the scripts include:
    - Hclust.py Flexible script to create a visualization of hierarchical clustering of abundance 
      tables (or other matrices).
    - scriptBiplotTSV.R Allows one to plot a tsv file as a biplot using nonmetric multidimensional scaling.
    - scriptPlotFeature.py Allows one to plot a histogram, boxplot, or scatter plot of a bug or metadata in 
      an abundance table. Will work on any row in a matrix.
    - scriptManipulateTable.py Allows one to perform common functions on an abundance table including, 
      summing, normalizing, filtering, stratifying tables.
    - scriptPcoa.py Allows one to plot a principle covariance analysis (PCoA) plot of an abundance table.
    - scriptConvertBetweenBIOMAndPCL.py Allows one to convert between BIOM and PCL file formats.
    - strainphlan_ggtree.R Allows one to plot dendrograms from StrainPhlAn outputs.
    - strainphlan_ordination.R Allows one to plot an ordination from StrainPhlAn outputs.

    For help, run:
        $ singularity run --app BreadCrumbs <CONTAINER_PATH> <SCRIPT> --help
    
    Examples:
        $ singularity exec --app BreadCrumbs <CONTAINER_PATH> strainphlan_ggtree.R --help
        or
        $ singularity run --app BreadCrumbs <CONTAINER_PATH> strainphlan_ggtree.R --help
    
    For more information on the technical aspects of BreadCrumbs, please refer to:
    https://bitbucket.org/biobakery/breadcrumbs/src/default/
    "
  fi
# =============================================================================
# Definition file for a singularity container for HERA
# This container is inteded for general purpose work on the HERA software stack.
# It contain most scientific Python packages and HERA software.
# =============================================================================
Bootstrap: library
From: ubuntu:20.04


# -----------------------------------------------------------------------------
# - Runtime environment variables -
# Define environment variables that will be set at runtime.
# -----------------------------------------------------------------------------
%environment
  export CONDA_INSTALL_PATH="/usr/local/miniconda3"
  export CONDA_INIT_SCRIPT="$CONDA_INSTALL_PATH/etc/profile.d/conda.sh"


# -----------------------------------------------------------------------------
# - Built commands -
# Commands to be executed at build time after the base OS has been installed.
# These commands are executed as root in /root inside the container.
# -----------------------------------------------------------------------------
%post
  # Update Ubuntu packages and install necessary packages
  apt-get update && apt-get install -y git wget vim

  # Fix locale bugs see https://github.com/hpcng/singularity/issues/11
  apt-get install -y locales && \
  echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen && \
  locale-gen && update-locale LANG=en_US.UTF-8

  apt-get clean

  # DONE with OS install and update

  # Define environment variables for install paths
  ROOT_INSTALL_PATH="/usr/local"
  CONDA_INSTALL_PATH="$ROOT_INSTALL_PATH/miniconda3"
  CONDA_INIT_SCRIPT="$CONDA_INSTALL_PATH/etc/profile.d/conda.sh"

  # Download and install miniconda
  cd $ROOT_INSTALL_PATH && \
  wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
  bash Miniconda3-latest-Linux-x86_64.sh -b -p $CONDA_INSTALL_PATH && \
  rm Miniconda3-latest-Linux-x86_64.sh

  # Make conda executable available during build and update.
  # This does not make the executable available during runtime.
  . $CONDA_INIT_SCRIPT && conda update -n base conda

  # Create `hera1` enviroment and install dependencies for HEREA packages.
  conda create -n hera1 -c conda-forge python=3.8 ipython ipykernel numpy scipy \
    scikit-learn matplotlib pandas astropy astropy-healpix astroquery \
    aipy healpy pyuvdata h5py pyyaml click python-casacore cartopy \
    xarray netcdf4 h5netcdf mpi4py dask jupyterlab ipympl \
    psutil line_profiler spiceypy

  # Activate the Python environment
  conda activate hera1

  # Install pyuvsim and dependencies
  pip install lunarsky
  pip install pyradiosky[all]
  pip install pyuvsim[all]

  # Install pygdsm
  pip install git+https://github.com/telegraphic/pygdsm

  # Install HERA packages.
  # linsolve is used in most hera software and should be installed first
  # hera_qm should be installed before hera_cal
  for pkg in linsolve uvtools hera_qm hera_cal hera_sim hera_pspec
  do
    pip install git+https://github.com/HERA-Team/$pkg
  done

  echo "== Done building container =="


%labels
  Author HERA Team


%help
  This container is inteded for general purpose work on the HERA software stack.
  It contain most scientific Python packages and HERA software.

# Based on the upstream https://github.com/lowerquality/gentle/blob/master/Dockerfile
# to minimize the changes needed.

Bootstrap: docker
From: ubuntu:18.04

%files

%post
    # install all of the dependencies
    export DEBIAN_FRONTEND=noninteractive
    # Handle non x86_64 architectures
    if test `arch` = 'x86_64' ; then
        echo "Setting for x86_64 target"
        CUDA=nvidia-cuda-dev

        # openBLAS won't build on an architecture it doesn't recognize.  Since
        # the source is several years old, building on new machines will fail.
        # explicitly setting the target to HASWELL (released in 2013) should cover
        # 99%+ of the machines out there.  Not sure what that would mean for an
        # AMD-based system, but it's old enough I assume that AMD CPUs will have all
        # of the features needed to work.
        export TARGET=HASWELL  
    else
        echo "Setting for non-x86_64 target"
        CUDA=
    fi

    # compile more than one thing at a time, leaving
    # 1 cpu free
    export MAKEFLAGS=" -j$(nproc --ignore 1)"

    # print the build parameters
    echo arch: `arch`
    echo Building for target: $TARGET
    echo Using cuda lib: $CUDA
    echo Make flags: $MAKEFLAGS

    apt-get update
    apt-get install -y \
        gcc g++ gfortran \
        libc++-dev libstdc++-6-dev zlib1g-dev \
        automake autoconf libtool \
        git subversion \
        libatlas3-base $CUDA \
        ffmpeg \
        python3 python3-dev python3-pip \
        python python-dev python-pip \
        wget unzip \
        sox 
    apt-get clean

    # checkout the upstream repository into /gentle
    cd /
    git clone --recursive https://github.com/lowerquality/gentle.git


    # build kaldi
    cd /gentle/ext
    ./install_kaldi.sh
    make depend
    make
    rm -rf kaldi *.o

    # build gentle
    cd /gentle
    python3 setup.py develop
    ./install_models.sh


%runscript
    python3 /gentle/align.py "$@"
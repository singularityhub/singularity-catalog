Bootstrap: docker
From: nvidia/cuda:11.1-cudnn8-devel-ubuntu18.04

#------------
# Global installation
#------------

 
%environment
    # for system
    which python
    export XDG_RUNTIME_DIR=/tmp/$USER
    # for ROOT
    export ROOTSYS=/usr/local/root
    export PATH=${ROOTSYS}/bin:${PATH}
    export LD_LIBRARY_PATH=${ROOTSYS}/lib:${LD_LIBRARY_PATH}
    export PYTHONPATH=${ROOTSYS}/lib:${PYTHONPATH}
    # for larcv
    export LARCV_PYTHON=/usr/bin/python3
    which python
    export LARCV_BASEDIR=/app/larcv2
    export LARCV_BUILDDIR=${LARCV_BASEDIR}/build
    export LARCV_COREDIR=${LARCV_BASEDIR}/larcv/core
    export LARCV_APPDIR=${LARCV_BASEDIR}/larcv/app
    export LARCV_LIBDIR=${LARCV_BUILDDIR}/lib
    export LARCV_INCDIR=${LARCV_BUILDDIR}/include
    export LARCV_BINDIR=${LARCV_BUILDDIR}/bin
    # without numpy
    #export LARCV_NUMPY=0
    #export LARCV_INCLUDES="-I${LARCV_INCDIR} "
    #export LARCV_LIBS="-L${LARCV_LIBDIR} -llarcv"

    # with numpy
    export LARCV_NUMPY=1
    export LARCV_INCLUDES="-I${LARCV_INCDIR} -I/usr/include/python3.6 -I/usr/include/x86_64-linux-gnu/python3.6"
    export LARCV_LIBS="-L/usr/lib/ -L/usr/lib/python3.6/config-x86_64-linux-gnu -L/usr/lib"
    export LARCV_LIBS="${LARCV_LIBS} -lpthread -ldl -lute -lm -lpython3.5 -Xlinker -export-dynamic -Wl,-O1 -Wl,-Bsymbolic-functions"
    export LARCV_LIBS="${LARCV_LIBS} -L${LARCV_LIBDIR} -llarcv"

    # set bin and lib path
    export PATH=${LARCV_BASEDIR}/bin:${LARCV_BINDIR}:${PATH}
    export LD_LIBRARY_PATH=${LARCV_LIBDIR}:${LD_LIBRARY_PATH}:
    export PYTHONPATH=${LARCV_BASEDIR}/python:${PYTHONPATH}

%post

   echo "Update apt-get"
    apt-get -y update
    apt-get install -y apt-utils
    apt-get -y install python3.6-dev
    echo "Install python3"
    apt-get -y install python3-matplotlib python3-pip git cmake wget emacs vim nano sqlite3 

   
    ln -s /usr/bin/python3 /usr/bin/python
    
    echo "Install python packages"
    python3 -m pip install --upgrade pip 
    python3 -m pip install --upgrade numpy 
    python3 -m pip install --upgrade setuptools
    #python3 -m pip install dash==0.41.0 plotly==3.7.1 ipywidgets==7.0.0 CoolProp
    ls /usr/include/python3.6 
    echo " found first "
    ls /usr/include
    echo " found second A "
    ls /usr/include/x86_64-linux-gnu
    #echo " found second B "
    #ls /usr/include/x86_64-linux-gnu/config-3.6m-x86_64-linux-gnu
    echo " found second C "
    ls /usr/lib/python3.6
    echo " found second D "
    ls /usr/lib/python3.6/config-3.6m-x86_64-linux-gnu
    echo "found 4th "
    ls /usr/include/x86_64-linux-gnu/python3.6m
    echo "did we find python?"
    ls
    ls /usr/include/python3.6

    # apt-get
    # apt-get -y update
    apt-get -y install dpkg-dev g++ gcc binutils libqt4-dev 
    apt-get -y install curl libhdf5-dev libhdf5-serial-dev
    # python3 python3-dev 
    # which python3  

     

    # ROOT    
    wget https://root.cern.ch/download/root_v6.18.00.Linux-ubuntu18-x86_64-gcc7.4.tar.gz
    tar -xzf root_v6.18.00.Linux-ubuntu18-x86_64-gcc7.4.tar.gz    
    rm root_v6.18.00.Linux-ubuntu18-x86_64-gcc7.4.tar.gz
    mv root /usr/local/root
    export ROOTSYS=/usr/local/root
    export PATH=${ROOTSYS}/bin:${PATH}
    export LD_LIBRARY_PATH=${ROOTSYS}/lib:${LD_LIBRARY_PATH}
    export PYTHONPATH=${ROOTSYS}/lib:${PYTHONPATH}

    # pip
    #python3 -m pip install --upgrade setuptools pip
    #python3 -m pip install --upgrade numpy
    python3 -m pip install scipy nose
    python3 -m pip install matplotlib pandas
    #python3 -m pip install 'ipython<6.0'
    python3 -m pip install ipython
    python3 -m pip install jupyter notebook
    python3 -m pip install tensorflow-gpu
    python3 -m pip install boost
    python3 -m pip install scikit-learn scikit-image
    python3 -m pip install scikit-build
    python3 -m pip install h5py

    python3 -m pip install --upgrade --user ipython

    export PATH=/root/.local/bin:${PATH}
    export PATH=${PATH}:/usr/local/hdf5
    export HDF5_INCLUDE_DIR=/usr/local/hdf5/include
    export HDF5_LIBRARIES=/usr/local/hdf5/lib

    # update TF with DANN
    git clone https://github.com/pumpikano/tf-dann.git
    

    mkdir /scratch 
    mkdir /data 
    mkdir /project 
    mkdir /lfstev

    python3 -m pip install larcv


    # larcv
    #export LARCV_BASEDIR=/app/larcv2
    #export LARCV_BUILDDIR=${LARCV_BASEDIR}/build
    #export LARCV_COREDIR=${LARCV_BASEDIR}/larcv/core
    #export LARCV_APPDIR=${LARCV_BASEDIR}/larcv/app
    #export LARCV_LIBDIR=${LARCV_BUILDDIR}/lib
    #export LARCV_INCDIR=${LARCV_BUILDDIR}/include
    #export LARCV_BINDIR=${LARCV_BUILDDIR}/bin
    #export LARCV_ROOT6=1
    #export LARCV_PYTHON=/usr/bin/python3
    #export LARCV_CXX=g++
    # without numpy
    #ENV LARCV_NUMPY=0
    #export LARCV_INCLUDES="-I${LARCV_INCDIR} "
    #export LARCV_LIBS="-L${LARCV_LIBDIR} -llarcv"
    # with numpy
    #export LARCV_NUMPY=1
    #export LARCV_INCLUDES="-I${LARCV_INCDIR} -I/usr/include/python3.6m -I/usr/include/x86_64-linux-gnu/python3.6m"
    #export LARCV_LIBS="-L/usr/lib/ -L/usr/lib/python3.6/config-3.6m-x86_64-linux-gnu -L/usr/lib"
    #export LARCV_LIBS="${LARCV_LIBS} -lpthread -ldl -lutil -lm -lpython3.6 -Xlinker -export-dynamic -Wl,-O1 -Wl,-Bsymbolic-functions"
    #export LARCV_LIBS="${LARCV_LIBS} -L${LARCV_LIBDIR} -llarcv"
    # set bin and lib path
    #export PATH=${LARCV_BASEDIR}/bin:${LARCV_BINDIR}:${PATH}
    #export LD_LIBRARY_PATH=${LARCV_LIBDIR}:${LD_LIBRARY_PATH}:
    #export PYTHONPATH=${LARCV_BASEDIR}/python:${PYTHONPATH}
    #mkdir /app && cd /app
    #git clone https://github.com/DeepLearnPhysics/larcv2
    #mkdir -p $LARCV_BUILDDIR
    #mkdir -p $LARCV_LIBDIR
    #mkdir -p $LARCV_BINDIR
    #cd $LARCV_BASEDIR && make -j4


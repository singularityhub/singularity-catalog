BootStrap: docker
From: ubuntu:18.04


%post
  #sed -i 's/main/main restricted universe/g' /etc/apt/sources.list
  apt-get update -y
  apt-get upgrade -y
  
  # locales
  echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
  apt-get install -y locales

  locale-gen en_US.UTF-8
  locale-gen de_CH.UTF-8

  # time
  apt-get install -y time 
  apt-get install -y tzdata 

  # set your timezone
  ln -fs /usr/share/zoneinfo/Europe/Berlin /etc/localtime  
  dpkg-reconfigure --frontend noninteractive tzdata
  
  # basic system
  apt-get install -y apt-utils 
  apt-get install -y software-properties-common 
  apt-get install -y vim 
  apt-get install -y build-essential 
  apt-get install -y wget 
  apt-get install -y sudo 
  apt-get install -y git 
  apt-get install -y curl 
  apt-get install -y gdebi-core 
  apt-get install -y lsb-release 
  apt-get install -y gnupg 
  apt-get install -y libreadline-dev 
  apt-get install -y zlib1g-dev 
  apt-get install -y screen


  # pg from distribution
  apt-get update -y
  echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" >> /etc/apt/sources.list.d/pgdg.list
  wget -qO - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
  apt-get install -y postgresql postgresql-contrib
  
    # poprep-req
  apt-get update -y
  apt-get install -y mutt
  apt-get install -y apache2
  apt-get install -y texlive
  apt-get install -y texinfo
  apt-get install -y gnuplot
  apt-get install -y gnuplot-nox
  apt-get install -y zip
  apt-get install -y unzip
  apt-get install -y gfortran
  apt-get install -y transfig
  apt-get install -y xinetd
  
  # update and upgrade
  apt-get update -y
  apt-get upgrade -y
  apt-get clean
  
  # special installation for pdftk which is no longer available
  curl -sSL http://launchpadlibrarian.net/337429932/libgcj-common_6.4-3ubuntu1_all.deb > libgcj-common_6.4-3ubuntu1_all.deb
  curl -sSL http://launchpadlibrarian.net/340410966/libgcj17_6.4.0-8ubuntu1_amd64.deb > libgcj17_6.4.0-8ubuntu1_amd64.deb
  curl -sSL http://launchpadlibrarian.net/277739894/pdftk_2.02-4build1_amd64.deb > pdftk_2.02-4build1_amd64.deb
  gdebi --n libgcj-common_6.4-3ubuntu1_all.deb
  gdebi --n libgcj17_6.4.0-8ubuntu1_amd64.deb
  gdebi --n pdftk_2.02-4build1_amd64.deb
  rm -rf libgcj-common_6.4-3ubuntu1_all.deb libgcj17_6.4.0-8ubuntu1_amd64.deb pdftk_2.02-4build1_amd64.deb

  # re-configure papersize
  sed -i 's/letter/a4/' /etc/papersize
  paperconfig -p a4
  
  # add the user for poprep
  useradd popreport -s /bin/bash -m
  echo popreport:pass | chpasswd
  
  # clone repository of poprep
  GIT_SSL_NO_VERIFY=true git clone https://tsp-repo.thesnppit.net/gogs/poprep/poprep.git -b genmon
  
  # move libgfortran.so.3
  mv poprep/libgfortran/libgfortran.so.3.0.0 /usr/lib/x86_64-linux-gnu/
  ln -s /usr/lib/x86_64-linux-gnu/libgfortran.so.3.0.0 /usr/lib/x86_64-linux-gnu/libgfortran.so.3
  
  # replace PGPORT replacement
  grep -r __PGPORT__ poprep/production/* | cut -d ':' -f1 | while read f
  do
    echo " * Replacing PGPORT in $f ..."
    sed -i -e "s/__PGPORT__/___PGPORT___/g" $f
  done
  
  # prepare directory for poprep
  mv poprep/production /home/popreport
  chmod -R 777 /home/popreport/production
  chown -R popreport: /home/popreport/production

  # add apiis_home to .bashrc
  (echo;echo '# add apiis_home';echo 'APIIS_HOME=/home/popreport/production/apiis') >> /home/popreport/.bashrc
  echo 'export PATH=$PATH:$APIIS_HOME/bin' >> /home/popreport/.bashrc

  # check and install additional perl- and apt-packages
  /home/popreport/production/apiis/bin/apiis-test-dependencies -i -d
  
  # create pg-directories
  for p in incoming done projects
  do 
    mkdir -p /var/lib/postgresql/$p
    chmod -R 777 /var/lib/postgresql/$p
  done

  # postgis
  apt-get update
  apt-get install -y postgresql-10-postgis-2.4
  
  # install OpenJDK 8 (LTS) from https://adoptopenjdk.net
  curl -sSL "https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u222-b10/OpenJDK8U-jdk_x64_linux_hotspot_8u222b10.tar.gz" > openjdk8.tar.gz
  mkdir -p /opt/openjdk
  tar -C /opt/openjdk -xf openjdk8.tar.gz
  rm -f openjdk8.tar.gz
  
  # tomcat
  apt-get update
  apt-get install -y tomcat9
  
  # maven
  apt-get update
  apt-get install -y maven

  # GeoServer
  curl -sSL http://sourceforge.net/projects/geoserver/files/GeoServer/2.17.2/geoserver-2.17.2-war.zip > geoserver-2.17.2-war.zip
  unzip geoserver-2.17.2-war.zip
  mv geoserver.war /var/lib/tomcat9/webapps

  # php
  add-apt-repository ppa:ondrej/php
  apt-get update
  apt-get install -y php5.6 php5.6-pgsql

  # phpmailer
  apt-get update
  apt-get install libphp-phpmailer
  
  # change apache2 configuration
  mv /etc/apache2/ports.conf /etc/apache2/ports.conf.org
  cat /etc/apache2/ports.conf.org | \
    sed -e "/^Listen 80.*/a Listen 8080" > /etc/apache2/ports.conf

  # change php config
  mv /etc/php/5.6/apache2/php.ini /etc/php/5.6/apache2/php.ini.org
  cat /etc/php/5.6/apache2/php.ini.org | \
    sed -e "s/upload_max_filesize = 2M/upload_max_filesize = 100M/" | \
    sed -e "s/post_max_size = 8M/post_max_size = 100M/" | \
    sed -e "s/max_execution_time = 30/max_execution_time = 10000/" | \
    sed -e "s/memory_limit = 128M/memory_limit = 1280M/" > /etc/php/5.6/apache2/php.ini

  # genmon
  mkdir -p /var/www/html/genmon-ch
  git clone https://github.com/pvrqualitasag/GENMON.git /var/www/html/genmon-ch
  
  # create data files directory for genmon
  mkdir -p /var/www/html/genmon-ch/Data_files
  
  # open layers 2
  curl -sSL https://github.com/openlayers/ol2/releases/download/release-2.13.1/OpenLayers-2.13.1.tar.gz > OpenLayers-2.13.1.tar.gz
  tar -C /var/www/html/genmon-ch -xzf OpenLayers-2.13.1.tar.gz
  mv /var/www/html/genmon-ch/OpenLayers-2.13.1 /var/www/html/genmon-ch/ol
  rm -rf OpenLayers-2.13.1.tar.gz
  
  # flot
  mkdir -p /var/www/html/genmon-ch/flot
  git clone https://github.com/flot/flot.git /var/www/html/genmon-ch/flot
  
  # permissions for postgres
  chmod -R 777 /var/run/postgresql

  # genmon-sidef
  git clone https://github.com/pvrqualitasag/genmon-sidef.git
  
  # run replacement script for localhost in php-scripts
  ./genmon-sidef/bash/gnm_replace_localhost.sh -p ./genmon-sidef/par/gnm_config.par
  rm -rf genmon-sidef
  
  # change owner of webhome
  chown -R www-data: /var/www  

%environment
  export PGPORT=___PGPORT___

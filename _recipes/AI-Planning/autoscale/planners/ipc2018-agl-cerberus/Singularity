Bootstrap: docker
From: ubuntu:xenial

%setup
     ## The "%setup"-part of this script is called to bootstrap an empty
     ## container. It copies the source files from the branch of your
     ## repository where this file is located into the container to the
     ## directory "/planner". Do not change this part unless you know
     ## what you are doing and you are certain that you have to do so.

    REPO_ROOT=`dirname $SINGULARITY_BUILDDEF`
    cp -r $REPO_ROOT/ $SINGULARITY_ROOTFS/planner

%post

    ## The "%post"-part of this script is called after the container has
    ## been created with the "%setup"-part above and runs "inside the
    ## container". Most importantly, it is used to install dependencies
    ## and build the planner. Add all commands that have to be executed
    ## once before the planner runs in this part of the script.

    ## Install all necessary dependencies.
    apt-get update
    apt-get -y install cmake g++ g++-multilib make python

    ## Build your planner
    cd /planner
    ./build.py release64

    ## Strip binaries.
    strip --strip-all /planner/builds/release64/bin/preprocess
    strip --strip-all /planner/builds/release64/bin/downward

    ## Remove packages unneeded for running the planner.
    apt -y autoremove cmake g++ g++-multilib make
    rm -rf /var/lib/apt/lists/*

    ## Only keep essential binaries.
    mkdir -p /compiled-planner/builds/release64
    mv /planner/driver /planner/fast-downward.py /planner/plan.py /compiled-planner
    mv /planner/builds/release64/bin /compiled-planner/builds/release64
    rm -rf /planner
    mv /compiled-planner /planner

%runscript
    ## The runscript is called whenever the container is used to solve
    ## an instance.

    DOMAINFILE=$1
    PROBLEMFILE=$2
    PLANFILE=$3

    ## Call your planner.
    /planner/plan.py $DOMAINFILE $PROBLEMFILE $PLANFILE

## Update the following fields with meta data about your submission.
## Please use the same field names and use only one line for each value.
%labels
Name        Cerberus
Description Red-black planning heuristic with native support for conditional effects, h^2 mutexes, novelty heuristic for search guidance
Authors     Michael Katz <michael.katz1@ibm.com>
SupportsDerivedPredicates no
SupportsQuantifiedPreconditions no
SupportsQuantifiedEffects no

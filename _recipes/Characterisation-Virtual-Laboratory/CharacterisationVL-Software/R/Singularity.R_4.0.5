Bootstrap: docker
From:      ubuntu:20.04

%labels
    MAINTAINER_NAME  Jafaruddin Lie
    MAINTAINER_EMAIL jafar.lie@monash.edu

    APPLICATION_NAME R
    APPLICATION_VERSION 4.0.5

    HARDWARE gpu

    LAST_UPDATED 30-APR-2021

%files
    dependencies.R /opt/dependencies.R

%environment
    CUDABINPATH=/usr/local/cuda/bin
    CUDALIBPATH=/usr/local/cuda/lib64/stubs:/usr/local/cuda/lib64/:/usr/local/cuda/lib
    export PATH=$PATH:$CUDABINPATH
    export LD_LIBRARY_PATH=$CUDALIBPATH:$LD_LIBRARY_PATH

%post
    echo "*********************************************************"
    echo "Setup and display environment"
    echo "*********************************************************"
    export LC_ALL=en_AU.UTF-8
    export LANGUAGE=en_AU.UTF-8
    export DEBIAN_FRONTEND=noninteractive
    echo $LC_ALL
    echo $LANGUAGE
    echo $DEBIAN_FRONTEND
    echo "*********************************************************"
    echo "Install repositories"
    echo "*********************************************************"
    apt update
    apt-get install -y software-properties-common
    apt-add-repository -y 'deb http://us.archive.ubuntu.com/ubuntu/ focal main restricted'
    apt-add-repository -y 'deb http://us.archive.ubuntu.com/ubuntu/ focal-updates main restricted'
    apt-add-repository -y 'deb http://us.archive.ubuntu.com/ubuntu/ focal universe'
    apt-add-repository -y 'deb http://us.archive.ubuntu.com/ubuntu/ focal-updates universe'
    echo "*********************************************************"
    echo "Update repositories and install desktop"
    echo "*********************************************************"
    apt update
    apt upgrade -y
    apt install -y locales
    locale-gen en_AU.UTF-8
    apt install -y wget ubuntu-desktop vim software-properties-common git cmake mesa-utils sudo build-essential gpg-agent

    echo "*********************************************************"
    echo "Installing CUDA 11.0"
    echo "*********************************************************"
    apt-get install -y g++ freeglut3-dev build-essential libx11-dev libxmu-dev libxi-dev libglu1-mesa libglu1-mesa-dev mesa-utils libgl1-mesa-glx
    apt-get install -y gcc-10
    cd /tmp
    wget https://developer.download.nvidia.com/compute/cuda/11.0.3/local_installers/cuda_11.0.3_450.51.06_linux.run
    chmod +x cuda_11.0.3_450.51.06_linux.run
    ./cuda_11.0.3_450.51.06_linux.run --silent --toolkit --toolkitpath=/usr/local/cuda-11.0/ --samples --samplespath=/usr/local/cuda-11.0-samples/ --override
    ln -s /usr/local/cuda-11.0 /usr/local/cuda
    ln -s /usr/bin/gcc-6 /usr/local/cuda/bin/gcc
    ln -s /usr/bin/g++-6 /usr/local/cuda/bin/g++
    rm -rf cuda_11.0.3_450.51.06_linux.run

    echo "*********************************************************"
    echo "Installing python dependencies"
    echo "*********************************************************"
    apt install -y python3-pip python3-pyqt5 pyqt5-dev python3-tk python3-pandas python3-fire

    echo "*********************************************************"
    echo "Installing vglrun and TurboVNC"
    echo "*********************************************************"
    wget https://swift.rc.nectar.org.au/v1/AUTH_810/CVL-Singularity-External-Files/turbovnc_2.2.5_amd64.deb
    dpkg -i turbovnc_2.2.5_amd64.deb
    wget https://swift.rc.nectar.org.au/v1/AUTH_810/CVL-Singularity-External-Files/virtualgl_2.6.4_amd64.deb
    dpkg -i virtualgl_2.6.4_amd64.deb
    apt update
    apt -y upgrade
    rm -rf turbovnc_2.2.5_amd64.deb virtualgl_2.6.4_amd64.deb

    echo "*********************************************************"
    echo "Installing R and dependencies"
    echo "*********************************************************"
    apt -y install dirmngr gnupg apt-transport-https ca-certificates software-properties-common
    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
    add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/'
    apt -y install r-base
    apt update
    apt -y install r-base gdebi-core libssl-dev curl libxml2-dev libcurl4-openssl-dev
    cd /tmp/
    wget https://download1.rstudio.org/desktop/bionic/amd64/rstudio-1.4.1106-amd64.deb
    gdebi -q -n /tmp/rstudio-1.4.1106-amd64.deb
    rm -rf rstudio-1.4.1106-amd64.deb
    Rscript /opt/dependencies.R

%runscript
    $*

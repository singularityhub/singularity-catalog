Bootstrap: docker
From: continuumio/miniconda3
%environment
    export PATH=/opt:/usr/games:/opt/conda/envs/py36/bin:/opt/conda/bin:/opt/Demultiplexing_Doublet_Detecting_Docs/scripts:/opt/bedtools2/bin:/opt/vartrix-v1.1.3-x86_64-linux/:opt/vcflib/bin:/opt/vcflib/scripts:/opt/souporcell:/opt/souporcell/troublet/target/release:/opt/minimap2-2.7:/root/.cargo/bin:/opt/freebayes/scripts:$PATH
    export PYTHONPATH=/opt/conda/envs/py36/lib/python3.6/site-packages/
    export LC_ALL=C 

%post 
    #!/bin/bash
    eval "$(command conda 'shell.bash' 'hook' 2> /dev/null)"
    export PATH=/opt/conda/bin/:$PATH


%post 
    #!/bin/bash
    eval "$(command conda 'shell.bash' 'hook' 2> /dev/null)"
    export PATH=/opt/conda/bin/:$PATH
    # apt update
    # yes | apt upgrade
    # yes | apt-get install build-essential
    # apt-get install -y --no-install-recommends apt-utils
    # apt-get install -y gcc-7 g++-7 gfortran-7 libgfortran-7-dev
    # update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 --slave /usr/bin/g++ g++ /usr/bin/g++-7
    # update-alternatives --config gcc
    # gcc --version
    # yes | apt-get install wget
    # yes | apt-get install curl
    # apt install -y dirmngr --install-recommends
    # apt install -y software-properties-common
    # apt install -y apt-transport-https
    # add-apt-repository 'deb http://deb.debian.org/debian buster-backports main'
    # yes | apt-get update
    # yes | apt-get upgrade
    # apt install -y ca-certificates gnupg2
    # apt-key adv --keyserver keyserver.ubuntu.com --recv-key 'E19F5F87128899B192B1A2C2AD5F960A256A04AF'
    # add-apt-repository 'deb http://cloud.r-project.org/bin/linux/debian buster-cran40/'
    # apt-get update
    # apt install -y r-base
    # apt install -y r-base-dev
    # apt-get update
    # apt-get install -y libv8-dev
    # apt-get update

	### Make environment for conda and install python 3.6.8
    # yes | /opt/conda/bin/conda create -n py36 python=3.6.8
    # yes | apt-get install git
    /opt/conda/bin/conda init bash
    eval "$(conda shell.bash hook)"
    conda activate py36
    #     yes | apt-get install libncurses5-dev
    #     yes | apt-get install zlib1g-dev
    #     yes | apt-get install libbz2-dev
    #     yes | apt-get install liblzma-dev
    #     yes | apt-get install zlib1g
    #     yes | apt-get install zlib1g-dev
    #     apt-get install -y pkg-config
    #     apt-get install -y libcurl4-openssl-dev
    #     apt-get install -y graphviz
    #     apt-get install -y graphviz-dev
    #     apt-get install -y libxml2
    #     apt-get install -y libxml2-dev
    #     apt-get install -y bzip2
    #     apt-get install -y libssl-dev
    #     apt-get install -y devscripts

    # cd /opt
	# 	wget https://github.com/Kitware/CMake/releases/download/v3.14.4/cmake-3.14.4.tar.gz
	# 	tar -xzf cmake-3.14.4.tar.gz
	# 	rm cmake-3.14.4.tar.gz
	# 	cd  cmake-3.14.4
	# 	./configure
	# 	make
	# 	make install
	# 	cmake --version

	# ### Install python dependencies + scrublet ###
    # yes | /opt/conda/envs/py36/bin/pip install pysam ##scSplit, souporcell
    # /opt/conda/envs/py36/bin/pip install pyvcf ##scSplit, souporcell
    # /opt/conda/envs/py36/bin/pip install numpy
    # /opt/conda/envs/py36/bin/pip install scipy 
    # /opt/conda/envs/py36/bin/pip install pystan==2.17.1.0 ## souporcell
    # /opt/conda/envs/py36/bin/pip install pyfaidx ## souporcell
    # /opt/conda/envs/py36/bin/pip install scikit-learn
    # /opt/conda/envs/py36/bin/pip install pandas
    # /opt/conda/envs/py36/bin/pip install matplotlib==3.2.2
    # # /opt/conda/envs/py36/bin/pip install matplotlib==3.4.3 ### try newer release to see if suitable
    # /opt/conda/envs/py36/bin/pip install scikit-image
    # /opt/conda/envs/py36/bin/pip install numba
    # /opt/conda/envs/py36/bin/pip install annoy
    # /opt/conda/envs/py36/bin/pip install umap-learn
    # /opt/conda/envs/py36/bin/pip install h5py
    # /opt/conda/envs/py36/bin/pip install xgboost
	# /opt/conda/envs/py36/bin/pip install argparse
    # /opt/conda/envs/py36/bin/pip install install Cython

	# ### Install CellSNP and Vireo ###
    # pip3 install vireoSNP
	# conda config --add channels bioconda
	# conda config --add channels conda-forge
    # conda install cellsnp-lite


	# ### Install minimap 2 for souporcell ###
    # cd /opt
    # wget https://github.com/lh3/minimap2/archive/v2.7.tar.gz
    #     tar -xzvf v2.7.tar.gz
	# 	rm v2.7.tar.gz
    #     cd minimap2-2.7
    #     make
    # 	echo 'alias minimap2=/opt/minimap2-2.7/minimap2' >> $SINGULARITY_ENVIRONMENT

	# ### Install bedtools2 for souporcell ###
    # cd /opt
    # wget https://github.com/arq5x/bedtools2/releases/download/v2.28.0/bedtools-2.28.0.tar.gz
    #     tar -zxvf bedtools-2.28.0.tar.gz
    #     cd bedtools2
    #     make
		cd /opt
		rm bedtools-2.28.0.tar.gz


	### Activate cargo
    cd /opt
    CARGO_HOME=/opt/.cargo RUSTUP_HOME=/opt/.cargo bash -c 'curl https://sh.rustup.rs -sSf | sh -s -- -y'
        . /opt/.cargo/env
        which cargo
        rustup default stable

	### Clone and install souporcell ###
    cd /opt
        git clone https://github.com/wheaton5/souporcell.git
            cd souporcell/troublet
            cargo build --release
            cd /opt/souporcell/souporcell
            cargo build --release
	
	### Install vartrix for souporcell ###
    cd /opt
        wget https://github.com/10XGenomics/vartrix/releases/download/v1.1.3/vartrix-v1.1.3-x86_64-linux.tar.gz
            tar xzvf vartrix-v1.1.3-x86_64-linux.tar.gz
            rm vartrix-v1.1.3-x86_64-linux.tar.gz

	### Install htslib for samtools - souporcell ###
    cd /opt
    wget https://github.com/samtools/htslib/releases/download/1.13/htslib-1.13.tar.bz2
        tar xvfj htslib-1.13.tar.bz2
        rm htslib-1.13.tar.bz2
        cd htslib-1.13
        ./configure
        make
        make install

	### Install samtools - souporcell ###
    cd /opt
        wget https://github.com/samtools/samtools/releases/download/1.13/samtools-1.13.tar.bz2
        tar xvfj samtools-1.13.tar.bz2
        rm samtools-1.13.tar.bz2
        cd samtools-1.13
        ./configure
        make
        make install
    	echo 'alias samtools=/opt/samtools-1.13/samtools' >> $SINGULARITY_ENVIRONMENT

	### Install bcftools - souporcell ###
    cd /opt
        wget https://github.com/samtools/bcftools/releases/download/1.13/bcftools-1.13.tar.bz2
        tar xvfj bcftools-1.13.tar.bz2
        rm bcftools-1.13.tar.bz2
        cd bcftools-1.13
        ./configure
        make
        make install
    	echo 'alias bcftools=/opt/bcftools-1.13/bcftools' >> $SINGULARITY_ENVIRONMENT

	### Install freebayes - souporcell and scSplit ###
    cd /opt
    	git clone https://github.com/ekg/freebayes.git
	
		wget https://github.com/freebayes/freebayes/releases/download/v1.3.4/freebayes-1.3.4-linux-static-AMD64.gz
		gunzip freebayes-1.3.4-linux-static-AMD64
		mv freebayes-1.3.4-linux-static-AMD64 freebayes/freebayes
		chmod 777 freebayes
		echo 'freebayes bcftools=/opt/freebayes/freebayes' >> $SINGULARITY_ENVIRONMENT

	### Install tabixpp - required for vcflib (next) ###
	cd /opt
		git clone --recursive https://github.com/ekg/tabixpp.git
		cd tabixpp
		make
		ranlib tabix.o 
		cp tabixpp/libtabixpp.a /usr/lib64/

	### Install vcflib - I think for scSplit to parallelize if necessary? ###
    cd /opt
    git clone --recursive https://github.com/vcflib/vcflib.git
        cd vcflib
        make

	### Install vcftools ###
	cd /opt
	wget https://github.com/vcftools/vcftools/releases/download/v0.1.16/vcftools-0.1.16.tar.gz
		tar xvf vcftools-0.1.16.tar.gz
		rm vcftools-0.1.16.tar.gz
		cd vcftools-0.1.16
		./configure
		make
		make install
		## should already be recognized when call vcftools

	### Install popscle ###
    cd /opt
    git clone https://github.com/statgen/popscle.git
        cd popscle
        cat CMakeLists.txt
        mkdir build
        cd build
        cmake ..
        make
    	echo 'alias popscle=/opt/popscle/bin/popscle' >> $SINGULARITY_ENVIRONMENT

	### Install scSplit ###
	pip3 install scSplit
	chmod 777 /usr/local/lib/python3.6/site-packages/scSplit/scSplit

	### Install scrublet
    /opt/conda/envs/py36/bin/pip install scrublet

	### Install DoubletDetection
	cd /opt
	git clone https://github.com/JonathanShor/DoubletDetection.git
	cd DoubletDetection
		/opt/conda/envs/py36/bin/pip install .

	### Install gnu parallel for txn doublet detecting softwares ####
    cd /opt
    wget http://ftp.gnu.org/gnu/parallel/parallel-latest.tar.bz2
        tar xjf parallel-latest.tar.bz2
		rm parallel-latest.tar.bz2
        cd parallel-*
        ./configure && make
        yes | make install


	### Set up louvain for solo ###
    sed -i 's/louvain.set_rng_seed(random_state)/partition_kwargs["seed"] = random_state/g'  /opt/conda/envs/py36/lib/python3.6/site-packages/scanpy/tools/_louvain.py

	### Install solo ###
    yes | conda install pytorch torchvision cudatoolkit=10.2 -c pytorch
    cd /opt
    yes | git clone https://github.com/calico/solo.git && cd solo && /opt/conda/envs/py36/bin/pip install -e .
    echo 'export MKL_THREADING_LAYER=GNU' >> $SINGULARITY_ENVIRONMENT

	### Get the github repo with scripts for workflow ###
	cd /opt
		git https://github.com/drneavin/Demultiplexing_Doublet_Detecting_Docs.git
		

	### Needed for R libraries ###
    cp /opt/conda/lib/libstdc++.so.6.0.28 /usr/lib/x86_64-linux-gnu/
    mv /usr/lib/x86_64-linux-gnu/libstdc++.so.6 /usr/lib/x86_64-linux-gnu/libstdc++.so.6.bkp
    ln -s /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 /usr/lib/x86_64-linux-gnu/libstdc++.so.6


	### Install R libraries ###
	## Base helper packages ##
    R --slave -e 'install.packages("V8", repos = "http://cran.us.r-project.org")'
    R --slave -e 'install.packages("devtools", repos = "http://cran.us.r-project.org")'
    R --slave -e 'install.packages("tidyverse", repos = "http://cran.us.r-project.org")'
    R --slave -e 'install.packages("data.table", repos = "http://cran.us.r-project.org")'
    R --slave -e 'install.packages("BiocManager")'
    R --slave -e 'install.packages("remotes", repos = "http://cran.us.r-project.org")'
    R --slave -e 'install.packages("xgboost", repos = "http://cran.us.r-project.org")'
    R --slave -e 'install.packages("argparse", repos = "http://cran.us.r-project.org")'

	## Other helper pacages ##
    R --slave -e 'devtools::install_github(repo="knausb/vcfR")'
    R --slave -e 'BiocManager::install("ComplexHeatmap")'
    R --slave -e 'install.packages("lsa", repos = "http://cran.us.r-project.org")'

	## Single Cell packages ##
    R --slave -e 'install.packages("Seurat", repos = "http://cran.us.r-project.org")'

	## Doublet Detecting packages ##
    R --slave -e 'devtools::install_github("kostkalab/scds", ref="master")'
    R --slave -e 'BiocManager::install("scDblFinder")'
    R --slave -e 'devtools::install_github("EDePasquale/DoubletDecon")'
    R --slave -e 'remotes::install_github("chris-mcginnis-ucsf/DoubletFinder")'
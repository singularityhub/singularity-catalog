# Generated by: Neurodocker version 0.7.0+0.gdc97516.dirty
# Latest release: Neurodocker version 0.7.0
# Timestamp: 2021/07/07 19:31:45 UTC
#
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
#
#     https://github.com/ReproNim/neurodocker

Bootstrap: docker
From: ubuntu:18.04

%post
su - root

export ND_ENTRYPOINT="/neurodocker/startup.sh"
apt-get update -qq
apt-get install -y -q --no-install-recommends \
    apt-utils \
    bzip2 \
    ca-certificates \
    curl \
    locales \
    unzip
apt-get clean
rm -rf /var/lib/apt/lists/*
sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
dpkg-reconfigure --frontend=noninteractive locales
update-locale LANG="en_US.UTF-8"
chmod 777 /opt && chmod a+s /opt
mkdir -p /neurodocker
if [ ! -f "$ND_ENTRYPOINT" ]; then
  echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT"
  echo 'set -e' >> "$ND_ENTRYPOINT"
  echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT"
  echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT";
fi
chmod -R 777 /neurodocker && chmod a+s /neurodocker

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    git \
    make
apt-get clean
rm -rf /var/lib/apt/lists/*

export PATH="/opt/miniconda-latest/bin:$PATH"
echo "Downloading Miniconda installer ..."
conda_installer="/tmp/miniconda.sh"
curl -fsSL --retry 5 -o "$conda_installer" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
bash "$conda_installer" -b -p /opt/miniconda-latest
rm -f "$conda_installer"
conda update -yq -nbase conda
conda config --system --prepend channels conda-forge
conda config --system --set auto_update_conda false
conda config --system --set show_channel_urls true
sync && conda clean -y --all && sync
conda env create -q --name markello_transcriptome --file /opt/environment.yml
rm -rf ~/.cache/pip/*


bash -c 'source activate markello_transcriptome && pip install /opt/vibecheck'

sed -i '$isource activate markello_transcriptome' $ND_ENTRYPOINT

echo '{
\n  "pkg_manager": "apt",
\n  "instructions": [
\n    [
\n      "base",
\n      "ubuntu:18.04"
\n    ],
\n    [
\n      "user",
\n      "root"
\n    ],
\n    [
\n      "_header",
\n      {
\n        "version": "generic",
\n        "method": "custom"
\n      }
\n    ],
\n    [
\n      "install",
\n      [
\n        "git",
\n        "make"
\n      ]
\n    ],
\n    [
\n      "copy",
\n      [
\n        "./environment.yml",
\n        "/opt/environment.yml"
\n      ]
\n    ],
\n    [
\n      "copy",
\n      [
\n        "./data/raw/abagen-data",
\n        "/opt/data"
\n      ]
\n    ],
\n    [
\n      "copy",
\n      [
\n        "./vibecheck",
\n        "/opt/vibecheck"
\n      ]
\n    ],
\n    [
\n      "miniconda",
\n      {
\n        "create_env": "markello_transcriptome",
\n        "yaml_file": "/opt/environment.yml"
\n      }
\n    ],
\n    [
\n      "run",
\n      "bash -c '"'"'source activate markello_transcriptome && pip install /opt/vibecheck'"'"'"
\n    ],
\n    [
\n      "add_to_entrypoint",
\n      "source activate markello_transcriptome"
\n    ],
\n    [
\n      "env",
\n      {
\n        "ABAGEN_DATA": "/opt/data",
\n        "NUMEXPR_MAX_THREADS": "1",
\n        "OPENBLAS_NUM_THREADS": "1",
\n        "MKL_NUM_THREADS": "1"
\n      }
\n    ]
\n  ]
\n}' > /neurodocker/neurodocker_specs.json

%environment
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export ND_ENTRYPOINT="/neurodocker/startup.sh"
export CONDA_DIR="/opt/miniconda-latest"
export PATH="/opt/miniconda-latest/bin:$PATH"
export ABAGEN_DATA="/opt/data"
export NUMEXPR_MAX_THREADS="1"
export OPENBLAS_NUM_THREADS="1"
export MKL_NUM_THREADS="1"

%files
./environment.yml /opt/environment.yml
./data/raw/abagen-data /opt/data
./vibecheck /opt/vibecheck

%runscript
/neurodocker/startup.sh "$@"
